/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto.vendas.view;

import static java.lang.Integer.parseInt;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import projeto.vendas.control.Conexao;
import projeto.vendas.control.DaoEmitirNotaFiscal;
import projeto.vendas.control.DaoGerarPedido;
import projeto.vendas.control.DaoNotaFiscalItens;
import projeto.vendas.control.DaoPFisica;
import projeto.vendas.control.DaoPJuridica;
import projeto.vendas.control.DaoVendedor;
import projeto.vendas.model.Login;
import projeto.vendas.model.NotaFiscal;
import projeto.vendas.model.Pedido;
import projeto.vendas.model.PessoaFisica;
import projeto.vendas.model.PessoaJuridica;
import projeto.vendas.model.Vendedor;
import projeto.vendas.tabelas.GuiControleEstrategicoRegiaoGeral;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.text.ParseException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author 0030481521038
 */
public class GuiControle_Estratégico_por_Região extends javax.swing.JFrame {

    /**
     * Creates new form GuiControle_Estratégico_por_Região
     */
    public GuiControle_Estratégico_por_Região(Login login) {
        initComponents();
        this.login = login;
        this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE); 

        GuiControle_Estratégico_por_Região.this.setTitle("Controle Estratégico "
                + "por Região    " + "Usuário:  " + login.getNome()
                + "         " + "Codigo:  " + login.getCodigo());

        DefaultTableModel modelo = (DefaultTableModel) tblRegiao.getModel();
        tblRegiao.setRowSorter(new TableRowSorter(modelo));
        URL caminhoIcone = getClass().getResource("/projeto/vendas/model/icones/logotipo.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Painel_Controle_Estratégico = new javax.swing.JPanel();
        Painel_Período_Pesquisa = new javax.swing.JPanel();
        lblData_Inicial = new javax.swing.JLabel();
        lblData_Final = new javax.swing.JLabel();
        ftxtData_Inicial = new javax.swing.JFormattedTextField();
        ftxtData_Final = new javax.swing.JFormattedTextField();
        btnVoltar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        Painel_Geral = new javax.swing.JTabbedPane();
        Painel_Regiao = new javax.swing.JPanel();
        jScrollPaneVendedor = new javax.swing.JScrollPane();
        tblRegiao = new javax.swing.JTable();
        btnRegiaoEspecifico = new javax.swing.JButton();
        Cbx_val = new javax.swing.JCheckBox();
        btnImprimir = new javax.swing.JButton();
        lblControle_Estrategico_Regiao = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle Estratégico por Região");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Painel_Período_Pesquisa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Período da Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12))); // NOI18N

        lblData_Inicial.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblData_Inicial.setText("Data Inicial");

        lblData_Final.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblData_Final.setText("Data Final");

        try {
            ftxtData_Inicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtData_Inicial.setText("01012000");
        ftxtData_Inicial.setToolTipText("");
        ftxtData_Inicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtData_InicialActionPerformed(evt);
            }
        });

        try {
            ftxtData_Final.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtData_Final.setText("");
        ftxtData_Final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtData_FinalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_Período_PesquisaLayout = new javax.swing.GroupLayout(Painel_Período_Pesquisa);
        Painel_Período_Pesquisa.setLayout(Painel_Período_PesquisaLayout);
        Painel_Período_PesquisaLayout.setHorizontalGroup(
            Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Período_PesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblData_Inicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ftxtData_Inicial, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 16, Short.MAX_VALUE)
                .addGroup(Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Painel_Período_PesquisaLayout.createSequentialGroup()
                        .addComponent(lblData_Final)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Painel_Período_PesquisaLayout.createSequentialGroup()
                        .addComponent(ftxtData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))))
        );
        Painel_Período_PesquisaLayout.setVerticalGroup(
            Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Período_PesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData_Inicial)
                    .addComponent(lblData_Final))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtData_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnVoltar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Voltar.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Consultar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tblRegiao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"AC", "ACRE",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"AL", "ALAGOAS",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"AM", "AMAZONAS",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"AP", "AMAZONAS",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"BA", "BAHIA",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"CE", "CEARÁ",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"DF", "DISTRITO FEDERAL",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"ES", "ESPIRITO SANTO",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"GO", "GOIÁS",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"MA", "MARANHÃO",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"MT", "MATO GROSSO",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"MS", "MATO GROSSO DO SUL",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"MG", "MINAS GERAIS",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"PA", "PARÁ",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"PB", "PARAÍBA",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"PR", "PARANÁ",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"PE", "PERNAMBUCO",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"PI", "PIAUÍ",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"RJ", "RIO DE JANEIRO",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"RN", "RIO GRANDE DO NORTE",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"RS", "RIO GRANDE DO SUL",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"RO", "RONDÔNIA",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"RR", "RORAIMA",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"SC", "SANTA CATARINA",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"SP", "SÃO PAULO",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"SE", "SERGIPE",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"},
                {"TO", "TOCANTINS",  new Integer(0),  new Integer(0),  new Integer(0),  new Integer(0), "0"}
            },
            new String [] {
                "UF", "Nome", "Qtd clientes", "Qtd clientes PF", "Qtd clientes PJ", "Qtd de Vendas", "Valor Total vendas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblRegiao.setToolTipText("");
        jScrollPaneVendedor.setViewportView(tblRegiao);

        btnRegiaoEspecifico.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnRegiaoEspecifico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Selecionar.png"))); // NOI18N
        btnRegiaoEspecifico.setText("Selecionar Região Específica");
        btnRegiaoEspecifico.setEnabled(false);
        btnRegiaoEspecifico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegiaoEspecificoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_RegiaoLayout = new javax.swing.GroupLayout(Painel_Regiao);
        Painel_Regiao.setLayout(Painel_RegiaoLayout);
        Painel_RegiaoLayout.setHorizontalGroup(
            Painel_RegiaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneVendedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 873, Short.MAX_VALUE)
            .addComponent(btnRegiaoEspecifico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Painel_RegiaoLayout.setVerticalGroup(
            Painel_RegiaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_RegiaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegiaoEspecifico, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Painel_Geral.addTab("Regiao", Painel_Regiao);

        Cbx_val.setText("Somente Estados que contenham cliente(s).");
        Cbx_val.setEnabled(false);

        btnImprimir.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Consultar.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setEnabled(false);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_Controle_EstratégicoLayout = new javax.swing.GroupLayout(Painel_Controle_Estratégico);
        Painel_Controle_Estratégico.setLayout(Painel_Controle_EstratégicoLayout);
        Painel_Controle_EstratégicoLayout.setHorizontalGroup(
            Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addGap(47, 47, 47)
                        .addComponent(btnBuscar)
                        .addGap(44, 44, 44)
                        .addComponent(Painel_Período_Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnImprimir)
                            .addComponent(Cbx_val))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                        .addComponent(Painel_Geral, javax.swing.GroupLayout.PREFERRED_SIZE, 878, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        Painel_Controle_EstratégicoLayout.setVerticalGroup(
            Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Painel_Geral, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Painel_Controle_EstratégicoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Painel_Período_Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                        .addGroup(Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnVoltar)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Cbx_val)))
                        .addContainerGap())))
        );

        lblControle_Estrategico_Regiao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Controle estrategico por Região.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblControle_Estrategico_Regiao, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Painel_Controle_Estratégico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Painel_Controle_Estratégico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblControle_Estrategico_Regiao, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ftxtData_InicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtData_InicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtData_InicialActionPerformed

    private void ftxtData_FinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtData_FinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtData_FinalActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        //limpa caso ja tiver algo na tabela
        if (flagLimpaTabela == 1) {
            for (int b = 0; b < tblRegiao.getRowCount(); b++) {
                for (int c = 2; c < 6; c++) {
                    if (c != 5 && (int) tblRegiao.getValueAt(b, c) != 0) {
                        tblRegiao.setValueAt(0, b, c);
                    } else {
                        tblRegiao.setValueAt(0, b, c);
                    }
                }
            }
        }
        daoPFisica = new DaoPFisica(conexao.conectar());
        daoPJrudica = new DaoPJuridica(conexao.conectar());
        daoGerarPedido = new DaoGerarPedido(conexao.conectar());
        daoEmitirNotaFical = new DaoEmitirNotaFiscal(conexao.conectar());

        ListarPessoasFisicas = daoPFisica.ListarPessoasFisicas();
        ListarPessoasJuridicas = daoPJrudica.ListarPessoasJuridicas();
        ListarNotaFiscal = daoEmitirNotaFical.ListarNotasFiscais();
        ListarPessoasFisicas = daoPFisica.ListarPessoasFisicas();
        ListarPessoasJuridicas = daoPJrudica.ListarPessoasJuridicas();

        try {
            preencheTabelaRegiao(ListarNotaFiscal);
        } catch (ParseException ex) {
            Logger.getLogger(GuiControle_Estratégico_por_Região.class.getName()).log(Level.SEVERE, null, ex);
        }

        preencheQtdCliente();
        if (flagLimpaTabela == 1) {
            Cbx_val.setEnabled(true);
            btnImprimir.setEnabled(true);
            btnRegiaoEspecifico.setEnabled(true);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conexao = new Conexao();
        conexao.setDriver();
        conexao.setConnectionString();

        daoPFisica = new DaoPFisica(conexao.conectar());
        daoPJrudica = new DaoPJuridica(conexao.conectar());

        SimpleDateFormat formatador = new SimpleDateFormat("ddMMyyyy");
        Date dataDoSistema = new Date(System.currentTimeMillis());
        String dataEmTexto = formatador.format(dataDoSistema);
        ftxtData_Final.setText(dataEmTexto);
    }//GEN-LAST:event_formWindowOpened

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        List lista = new ArrayList();
        if (Cbx_val.isSelected()) {
            for (int x = 0; x < tblRegiao.getRowCount(); x++) {
                if ((int) tblRegiao.getValueAt(x, 2) != 0) {
                    GuiControleEstrategicoRegiaoGeral print
                            = new GuiControleEstrategicoRegiaoGeral();

                    print.setUF((String) tblRegiao.getValueAt(x, 0));
                    print.setEstado((String) tblRegiao.getValueAt(x, 1));
                    print.setQtdCli((int) tblRegiao.getValueAt(x, 2));
                    print.setQtdCliPF((int) tblRegiao.getValueAt(x, 3));
                    print.setQtdCliPJ((int) tblRegiao.getValueAt(x, 4));
                    print.setQtdVendas((int) tblRegiao.getValueAt(x, 5));

                    //gambi
                    String a = (String) tblRegiao.getValueAt(x, 6);
                    a = a.replace(",", ".");
                    double var = Double.parseDouble(a);
                    print.setValorVendas(var);

                    lista.add(print);
                }
            }
        } else {
            for (int x = 0; x < tblRegiao.getRowCount(); x++) {
                GuiControleEstrategicoRegiaoGeral print
                        = new GuiControleEstrategicoRegiaoGeral();

                print.setUF((String) tblRegiao.getValueAt(x, 0));
                print.setEstado((String) tblRegiao.getValueAt(x, 1));
                print.setQtdCli((int) tblRegiao.getValueAt(x, 2));
                print.setQtdCliPF((int) tblRegiao.getValueAt(x, 3));
                print.setQtdCliPJ((int) tblRegiao.getValueAt(x, 4));
                print.setQtdVendas((int) tblRegiao.getValueAt(x, 5));

                //gambi
                String a = (String) tblRegiao.getValueAt(x, 6);
                a = a.replace(",", ".");
                double var = Double.parseDouble(a);
                print.setValorVendas(var);

                lista.add(print);
            }
        }
        Map parameters = new HashMap();
        parameters.put("dtinicio", ftxtData_Inicial.getText());
        parameters.put("dtfinal", ftxtData_Final.getText());

        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(lista);
        try {

            JasperPrint jpPrint;
            jpPrint = JasperFillManager.fillReport("relatorios/EstrategiaPorRegiao1.jasper",
                    parameters, ds);

            JasperViewer jv = new JasperViewer(jpPrint, false);
            jv.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(GuiControle_Estratégico_por_Região.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void btnRegiaoEspecificoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegiaoEspecificoActionPerformed
        if (tblRegiao.getSelectedRow() >= 0) {
            preencheAtivo();
                                        
                            //gambi
                    String a = (String) tblRegiao.getValueAt(tblRegiao.getSelectedRow(), 6);
                    a = a.replace(",", ".");
                    double var = Double.parseDouble(a);
                    
            GuiControle_Estratégico_por_Região_Especifica GUI
                    = new GuiControle_Estratégico_por_Região_Especifica(login,
                            (String) tblRegiao.getValueAt(tblRegiao.getSelectedRow(), 0),
                            (String) tblRegiao.getValueAt(tblRegiao.getSelectedRow(), 1),
                            (int) tblRegiao.getValueAt(tblRegiao.getSelectedRow(), 2),
                            (int) tblRegiao.getValueAt(tblRegiao.getSelectedRow(), 3),
                            (int) tblRegiao.getValueAt(tblRegiao.getSelectedRow(), 4),
                            (int) tblRegiao.getValueAt(tblRegiao.getSelectedRow(), 5),
                            var,
                            ListarNotaFiscal,
                            ftxtData_Inicial.getText(),
                            ftxtData_Final.getText(),
                            ativo,
                            inativo,
                            ListarPessoasFisicas, ListarPessoasJuridicas);
            GUI.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Escolha uma Região!");
        }
    }//GEN-LAST:event_btnRegiaoEspecificoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Região.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Região.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Região.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Região.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiControle_Estratégico_por_Região(login).setVisible(true);
            }
        });
    }

    private DecimalFormat formatador = new DecimalFormat("0.00");
    private int ativo;
    private int inativo;
    private static DecimalFormat formatoDinheiro = new DecimalFormat("#.##");
    private ArrayList<PessoaFisica> ListarPessoasFisicas;
    private ArrayList<PessoaJuridica> ListarPessoasJuridicas;
    private ArrayList<NotaFiscal> ListarNotaFiscal;
    private ArrayList<Pedido> ListarPedidos;
    private static Login login = null;
    private static int codigo;
    private Conexao conexao;
    private Vendedor vendedor = null;
    private NotaFiscal notaFiscal = null;
    private DaoVendedor daoVendedor = null;
    private DaoPFisica daoPFisica = null;
    private DaoPJuridica daoPJrudica = null;
    private DaoEmitirNotaFiscal daoEmitirNotaFical = null;
    private DaoNotaFiscalItens daoNotaFicalItens = null;
    private PessoaFisica pessoaFisica = null;
    private PessoaJuridica pessoaJuridica = null;
    private DaoGerarPedido daoGerarPedido = null;
    private Pedido pedido = null;
    private DefaultTableModel model = null;
    private String legendaSituacao = null;
    private int flagLimpaTabela = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Cbx_val;
    private javax.swing.JPanel Painel_Controle_Estratégico;
    private javax.swing.JTabbedPane Painel_Geral;
    private javax.swing.JPanel Painel_Período_Pesquisa;
    private javax.swing.JPanel Painel_Regiao;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnRegiaoEspecifico;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField ftxtData_Final;
    private javax.swing.JFormattedTextField ftxtData_Inicial;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneVendedor;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblControle_Estrategico_Regiao;
    private javax.swing.JLabel lblData_Final;
    private javax.swing.JLabel lblData_Inicial;
    private javax.swing.JTable tblRegiao;
    // End of variables declaration//GEN-END:variables

    public void preencheTabelaRegiao(ArrayList<NotaFiscal> ListarNotaFiscal) throws ParseException {

        int diaI = parseInt(ftxtData_Inicial.getText().substring(0, 2));
        int mesI = parseInt(ftxtData_Inicial.getText().substring(3, 5));
        int anoI = parseInt(ftxtData_Inicial.getText().substring(6, 10));
        LocalDate dataInicio = LocalDate.of(anoI, mesI, diaI);

        int diaF = parseInt(ftxtData_Final.getText().substring(0, 2));
        int mesF = parseInt(ftxtData_Final.getText().substring(3, 5));
        int anoF = parseInt(ftxtData_Final.getText().substring(6, 10));
        LocalDate dataFinal = LocalDate.of(anoF, mesF, diaF);

        for (int x = 0; x < ListarNotaFiscal.size(); x++) {
            int dia = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(0, 2));
            int mes = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(3, 5));
            int ano = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(6, 10));
            LocalDate datainicio1 = LocalDate.of(ano, mes, dia);

            // testa se a data é maior que a data inicial da busca
            if (datainicio1.isAfter(dataInicio) || datainicio1.isEqual(dataInicio)) {
                //testa se a data é menor que a data final da busca
                if (datainicio1.isBefore(dataFinal) || datainicio1.isEqual(dataFinal)) {

                    //busca o pedido para descobrir o cliente
                    pedido = daoGerarPedido.Consultar(ListarNotaFiscal.get(x).getPedidoCod());
                    // busca o cliente se for pessoa fisica ou juridica
                    if (pedido.getClienteCod().substring(0, 2).equals("PF")) {
                        pessoaFisica = daoPFisica.consultar(pedido.getClienteCod());
                        for (int a = 0; a < tblRegiao.getRowCount(); a++) {
                            if (pessoaFisica.getUf().equals(tblRegiao.getValueAt(a, 0))) {
                                int qtd = (int) tblRegiao.getValueAt(a, 5);
                                tblRegiao.setValueAt(qtd + 1, a, 5);

                                double valor = converte((String) tblRegiao.getValueAt(a, 6));
                                tblRegiao.setValueAt(formatador.format(valor + ListarNotaFiscal.get(x).getTotal()), a, 6);
                                flagLimpaTabela = 1;
                            }
                        }
                    } else {
                        pessoaJuridica = daoPJrudica.consultar(pedido.getClienteCod());
                        for (int a = 0; a < tblRegiao.getRowCount(); a++) {
                            if (pessoaJuridica.getUf().equals(tblRegiao.getValueAt(a, 0))) {
                                int qtd = (int) tblRegiao.getValueAt(a, 5);
                                tblRegiao.setValueAt(qtd + 1, a, 5);

                                double valor = (double) tblRegiao.getValueAt(a, 6);
                                tblRegiao.setValueAt(formatador.format(valor + ListarNotaFiscal.get(x).getTotal()), a, 6);
                                flagLimpaTabela = 1;
                            }
                        }
                    }
                }
            }
        }
    }

    public double formataDinheiro(double valor) {
        DecimalFormat formato = new DecimalFormat("#.##");
        valor = Double.valueOf(formato.format(valor));
        return (valor);
    }

    public void preencheQtdCliente() {
        for (int c = 0; c < tblRegiao.getRowCount(); c++) {
            for (int b = 0; b < ListarPessoasFisicas.size(); b++) {
                if (ListarPessoasFisicas.get(b).getUf().equals((String) tblRegiao.getValueAt(c, 0))) {
                    int aux = (int) tblRegiao.getValueAt(c, 2);
                    tblRegiao.setValueAt(aux + 1, c, 2);

                    aux = (int) tblRegiao.getValueAt(c, 3);
                    tblRegiao.setValueAt(aux + 1, c, 3);
                    flagLimpaTabela = 1;
                }
            }
        }
        for (int c = 0; c < tblRegiao.getRowCount(); c++) {
            for (int b = 0; b < ListarPessoasJuridicas.size(); b++) {
                if (ListarPessoasJuridicas.get(b).getUf().equals((String) tblRegiao.getValueAt(c, 0))) {
                    int aux = (int) tblRegiao.getValueAt(c, 2);
                    tblRegiao.setValueAt(aux + 1, c, 2);

                    aux = (int) tblRegiao.getValueAt(c, 4);
                    tblRegiao.setValueAt(aux + 1, c, 4);
                    flagLimpaTabela = 1;
                }
            }
        }
    }

    public void preencheAtivo() {
        ativo = 0;
        inativo = 0;

        for (int b = 0; b < ListarPessoasFisicas.size(); b++) {
            if (ListarPessoasFisicas.get(b).getUf().equals((String) tblRegiao.getValueAt(
                    tblRegiao.getSelectedRow(), 0))) {

                if (ListarPessoasFisicas.get(b).getAtivo().equals("A")) {
                    ativo++;
                } else {
                    inativo++;
                }

            }
        }
        for (int b = 0; b < ListarPessoasJuridicas.size(); b++) {
            if (ListarPessoasJuridicas.get(b).getUf().equals((String) tblRegiao.getValueAt(
                    tblRegiao.getSelectedRow(), 0))) {

                if (ListarPessoasJuridicas.get(b).getAtivo().equals("A")) {
                    ativo++;
                } else {
                    inativo++;
                }
            }
        }
    }

    public double converte(String arg) throws ParseException {
        //obtem um NumberFormat para o Locale default (BR)
        NumberFormat nf = NumberFormat.getNumberInstance();
        //converte um nÃºmero com vÃ­rgulas ex: 2,56 para double
        double number = nf.parse(arg).doubleValue();
        return number;
    }
}
