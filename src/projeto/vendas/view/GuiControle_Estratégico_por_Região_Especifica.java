/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto.vendas.view;

import static java.lang.Integer.parseInt;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import projeto.vendas.control.Conexao;
import projeto.vendas.control.DaoGerarPedido;
import projeto.vendas.control.DaoPFisica;
import projeto.vendas.control.DaoPJuridica;
import projeto.vendas.control.DaoVendedor;
import projeto.vendas.model.Login;
import projeto.vendas.model.NotaFiscal;
import projeto.vendas.model.Pedido;
import projeto.vendas.model.PessoaFisica;
import projeto.vendas.model.PessoaJuridica;
import projeto.vendas.model.Vendedor;

/**
 *
 * @author 0030481521038
 */
public class GuiControle_Estratégico_por_Região_Especifica extends javax.swing.JFrame {

    /**
     * Creates new form GuiControle_Estratégico_por_Região
     */
    public GuiControle_Estratégico_por_Região_Especifica(Login login,
            String UF, String estado, int qtdCli, int qtdPF, int qtdPJ,int qtdVendas, double valorTotal,
            ArrayList<NotaFiscal> ListarNotaFiscal, String dtInicio, String dtFinal,int ativo,int inativo) {
        initComponents();
        this.login = login;
        this.UF = UF;
        this.estado = estado;
        this.qtdCli = qtdCli;
        this.qtdPF = qtdPF;
        this.qtdPJ = qtdPJ;
        this.qtdVendas = qtdVendas;
        this.valorTotal = valorTotal;
        this.ListarNotaFiscal = ListarNotaFiscal;
        this.dtInicio = dtInicio;
        this.dtFinal = dtFinal;
        this.ativo = ativo;
        this.inativo = inativo;

        GuiControle_Estratégico_por_Região_Especifica.this.setTitle("Controle Estratégico "
                + "por Vendedor    " + "Usuário:  " + login.getNome()
                + "         " + "Codigo:  " + login.getCodigo());

        DefaultTableModel modelo = (DefaultTableModel) tblRegiaoEspecifica.getModel();
        tblRegiaoEspecifica.setRowSorter(new TableRowSorter(modelo));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Painel_Controle_Estratégico = new javax.swing.JPanel();
        btnVoltar = new javax.swing.JButton();
        Painel_Especifico = new javax.swing.JTabbedPane();
        Painel_RegiaoEscolhida = new javax.swing.JPanel();
        jScrollPaneVendedor1 = new javax.swing.JScrollPane();
        tblRegiaoEspecifica = new javax.swing.JTable();
        PainelResumo = new javax.swing.JPanel();
        txtEstado = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        lblQtdClientes = new javax.swing.JLabel();
        txtQtdClientes = new javax.swing.JTextField();
        lblQtdPF = new javax.swing.JLabel();
        txtQtdClientesPF = new javax.swing.JTextField();
        lblQtdPJ = new javax.swing.JLabel();
        txtQtdClientePJ = new javax.swing.JTextField();
        lblAtivo = new javax.swing.JLabel();
        txtAtivo = new javax.swing.JTextField();
        lblInativo = new javax.swing.JLabel();
        txtInativo = new javax.swing.JTextField();
        Painel_Período_Pesquisa = new javax.swing.JPanel();
        lblData_Inicial = new javax.swing.JLabel();
        lblData_Final = new javax.swing.JLabel();
        ftxtData_Inicial = new javax.swing.JFormattedTextField();
        ftxtData_Final = new javax.swing.JFormattedTextField();
        btnImprimir = new javax.swing.JButton();
        Painel_Mapa = new javax.swing.JPanel();
        lblControle_Estrategico_Regiao = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle Estratégico por Região");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnVoltar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Voltar.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        tblRegiaoEspecifica.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Cidade", "Qtd Compras", "Valor das compras", "Codigo do vendedor responsavel", "Nome do vendedor responsavel"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblRegiaoEspecifica.setToolTipText("");
        jScrollPaneVendedor1.setViewportView(tblRegiaoEspecifica);

        javax.swing.GroupLayout Painel_RegiaoEscolhidaLayout = new javax.swing.GroupLayout(Painel_RegiaoEscolhida);
        Painel_RegiaoEscolhida.setLayout(Painel_RegiaoEscolhidaLayout);
        Painel_RegiaoEscolhidaLayout.setHorizontalGroup(
            Painel_RegiaoEscolhidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 873, Short.MAX_VALUE)
            .addGroup(Painel_RegiaoEscolhidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Painel_RegiaoEscolhidaLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPaneVendedor1, javax.swing.GroupLayout.DEFAULT_SIZE, 853, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        Painel_RegiaoEscolhidaLayout.setVerticalGroup(
            Painel_RegiaoEscolhidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
            .addGroup(Painel_RegiaoEscolhidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Painel_RegiaoEscolhidaLayout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jScrollPaneVendedor1, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                    .addGap(39, 39, 39)))
        );

        Painel_Especifico.addTab("Clientes por cidade", Painel_RegiaoEscolhida);

        lblEstado.setText("Estado:");

        lblQtdClientes.setText("Quantidade de clientes:");

        lblQtdPF.setText("Quantidades de clientes Pessoa Fisica:");

        lblQtdPJ.setText("Quantidade de clientes Pessoa Juridica:");

        lblAtivo.setText("Clientes Ativos:");

        txtAtivo.setText("0");

        lblInativo.setText("Clientes Inativos:");

        txtInativo.setText("0");

        Painel_Período_Pesquisa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Período da Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12))); // NOI18N

        lblData_Inicial.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblData_Inicial.setText("Data Inicial");

        lblData_Final.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblData_Final.setText("Data Final");

        try {
            ftxtData_Inicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtData_Inicial.setText("");
        ftxtData_Inicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtData_InicialActionPerformed(evt);
            }
        });

        try {
            ftxtData_Final.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtData_Final.setText("");
        ftxtData_Final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtData_FinalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_Período_PesquisaLayout = new javax.swing.GroupLayout(Painel_Período_Pesquisa);
        Painel_Período_Pesquisa.setLayout(Painel_Período_PesquisaLayout);
        Painel_Período_PesquisaLayout.setHorizontalGroup(
            Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Período_PesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ftxtData_Inicial)
                    .addComponent(lblData_Inicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Painel_Período_PesquisaLayout.createSequentialGroup()
                        .addComponent(lblData_Final)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Painel_Período_PesquisaLayout.createSequentialGroup()
                        .addComponent(ftxtData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))))
        );
        Painel_Período_PesquisaLayout.setVerticalGroup(
            Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Período_PesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData_Inicial)
                    .addComponent(lblData_Final))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Painel_Período_PesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtData_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PainelResumoLayout = new javax.swing.GroupLayout(PainelResumo);
        PainelResumo.setLayout(PainelResumoLayout);
        PainelResumoLayout.setHorizontalGroup(
            PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelResumoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEstado)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQtdClientes)
                    .addComponent(txtQtdClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQtdPF)
                    .addComponent(txtQtdClientesPF, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInativo)
                    .addComponent(txtInativo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PainelResumoLayout.createSequentialGroup()
                        .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAtivo)
                            .addComponent(txtAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQtdPJ)
                            .addComponent(txtQtdClientePJ, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(Painel_Período_Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(183, Short.MAX_VALUE))
        );
        PainelResumoLayout.setVerticalGroup(
            PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelResumoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelResumoLayout.createSequentialGroup()
                        .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelResumoLayout.createSequentialGroup()
                                .addComponent(lblEstado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PainelResumoLayout.createSequentialGroup()
                                .addComponent(lblQtdPJ)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtdClientePJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelResumoLayout.createSequentialGroup()
                                .addComponent(lblQtdClientes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtdClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PainelResumoLayout.createSequentialGroup()
                                .addComponent(lblAtivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAtivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(Painel_Período_Pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelResumoLayout.createSequentialGroup()
                        .addComponent(lblQtdPF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQtdClientesPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PainelResumoLayout.createSequentialGroup()
                        .addComponent(lblInativo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        Painel_Especifico.addTab("Resumo da Região", PainelResumo);

        btnImprimir.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Consultar.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_Controle_EstratégicoLayout = new javax.swing.GroupLayout(Painel_Controle_Estratégico);
        Painel_Controle_Estratégico.setLayout(Painel_Controle_EstratégicoLayout);
        Painel_Controle_EstratégicoLayout.setHorizontalGroup(
            Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                .addGroup(Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(btnVoltar)
                        .addGap(121, 121, 121)
                        .addComponent(btnImprimir))
                    .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Painel_Especifico, javax.swing.GroupLayout.PREFERRED_SIZE, 878, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        Painel_Controle_EstratégicoLayout.setVerticalGroup(
            Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Controle_EstratégicoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Painel_Especifico, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(Painel_Controle_EstratégicoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltar))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Painel_MapaLayout = new javax.swing.GroupLayout(Painel_Mapa);
        Painel_Mapa.setLayout(Painel_MapaLayout);
        Painel_MapaLayout.setHorizontalGroup(
            Painel_MapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        Painel_MapaLayout.setVerticalGroup(
            Painel_MapaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        lblControle_Estrategico_Regiao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Controle estrategico por Região.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblControle_Estrategico_Regiao, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Painel_Controle_Estratégico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Painel_Mapa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Painel_Mapa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblControle_Estrategico_Regiao, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(Painel_Controle_Estratégico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ftxtData_InicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtData_InicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtData_InicialActionPerformed

    private void ftxtData_FinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtData_FinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtData_FinalActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conexao = new Conexao();
        conexao.setDriver();
        conexao.setConnectionString();

        daoPFisica = new DaoPFisica(conexao.conectar());
        daoPJrudica = new DaoPJuridica(conexao.conectar());
        daoGerarPedido = new DaoGerarPedido(conexao.conectar());

        txtEstado.setText(estado);
        txtQtdClientePJ.setText(String.valueOf(qtdPJ));
        txtQtdClientesPF.setText(String.valueOf(qtdPF));
        txtQtdClientes.setText(String.valueOf(qtdCli));
        ftxtData_Inicial.setText(dtInicio);
        ftxtData_Final.setText(dtFinal);
        txtAtivo.setText(String.valueOf(ativo));
        txtInativo.setText(String.valueOf(inativo));

        if (flagLimpaTabela1 == 1) {
            modelo.setRowCount(0);
        }
        int diaI = parseInt(ftxtData_Inicial.getText().substring(0, 2));
        int mesI = parseInt(ftxtData_Inicial.getText().substring(3, 5));
        int anoI = parseInt(ftxtData_Inicial.getText().substring(6, 10));
        LocalDate dataInicio = LocalDate.of(anoI, mesI, diaI);

        int diaF = parseInt(ftxtData_Final.getText().substring(0, 2));
        int mesF = parseInt(ftxtData_Final.getText().substring(3, 5));
        int anoF = parseInt(ftxtData_Final.getText().substring(6, 10));
        LocalDate dataFinal = LocalDate.of(anoF, mesF, diaF);

        for (int x = 0; x < ListarNotaFiscal.size(); x++) {
            int dia = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(0, 2));
            int mes = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(3, 5));
            int ano = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(6, 10));
            LocalDate datainicio1 = LocalDate.of(ano, mes, dia);

            // testa se a data é maior que a data inicial da busca
            if (datainicio1.isAfter(dataInicio) || datainicio1.isEqual(dataInicio)) {
                //testa se a data é menor que a data final da busca
                if (datainicio1.isBefore(dataFinal) || datainicio1.isEqual(dataFinal)) {
                    pedido = daoGerarPedido.Consultar(ListarNotaFiscal.get(x).getPedidoCod());

                    //caso a tabela esteja vazia
                    if (!(tblRegiaoEspecifica.getRowCount() > 0)) {
                        if (pedido.getClienteCod().substring(0, 2).equals("PF")) {
                            pessoaFisica = daoPFisica.consultar(pedido.getClienteCod());
                            if (pessoaFisica.getUf().equals(UF)) {
                                Object[] row = {
                                    pessoaFisica.getCodigo(),
                                    pessoaFisica.getNome(),
                                    pessoaFisica.getCidade(),
                                    1,
                                    ListarNotaFiscal.get(x).getTotal(),
                                    pessoaFisica.getCod_vend_resp(),
                                    pessoaFisica.getVendedor_responsavel()};

                                modelo = (DefaultTableModel) tblRegiaoEspecifica.getModel();
                                modelo.addRow(row);
                                flagLimpaTabela1 = 1;
                            }
                        } else {
                            pessoaJuridica = daoPJrudica.consultar(pedido.getClienteCod());
                            if (pessoaJuridica.getUf().equals(UF)) {
                                Object[] row = {
                                    pessoaJuridica.getCodigo(),
                                    pessoaJuridica.getNome(),
                                    pessoaJuridica.getCidade(),
                                    0,
                                    0,
                                    pessoaJuridica.getCod_vend_resp(),
                                    pessoaJuridica.getVendedor_responsavel()};

                                modelo = (DefaultTableModel) tblRegiaoEspecifica.getModel();
                                modelo.addRow(row);
                                flagLimpaTabela1 = 1;
                            }
                        }
                    } //caso a tabela tenha ao menos um registro
                    else {
                        if (pedido.getClienteCod().substring(0, 2).equals("PF")) {
                            pessoaFisica = daoPFisica.consultar(pedido.getClienteCod());
                            if (pessoaFisica.getUf().equals(UF)) {
                                int encontrou = 0;
                                for (int c = 0; c < tblRegiaoEspecifica.getRowCount(); c++) {
                                    if (pessoaFisica.getCodigo().equals((String) tblRegiaoEspecifica.getValueAt(c, 0))) {
                                        tblRegiaoEspecifica.setValueAt((int) tblRegiaoEspecifica.getValueAt(c, 3) + 1, c, 3);
                                        tblRegiaoEspecifica.setValueAt((double) tblRegiaoEspecifica.getValueAt(c, 4)
                                                + ListarNotaFiscal.get(x).getTotal(), c, 4);
                                        encontrou = 1;
                                    }
                                }
                                if (encontrou == 0) {
                                    Object[] row = {
                                        pessoaFisica.getCodigo(),
                                        pessoaFisica.getNome(),
                                        pessoaFisica.getCidade(),
                                        1,
                                        ListarNotaFiscal.get(x).getTotal(),
                                        pessoaFisica.getCod_vend_resp(),
                                        pessoaFisica.getVendedor_responsavel()};

                                    modelo = (DefaultTableModel) tblRegiaoEspecifica.getModel();
                                    modelo.addRow(row);
                                    flagLimpaTabela1 = 1;
                                }
                            }
                        } else {
                            pessoaJuridica = daoPJrudica.consultar(pedido.getClienteCod());
                            if (pessoaJuridica.getUf().equals(UF)) {
                                int encontrou = 0;
                                for (int c = 0; c < tblRegiaoEspecifica.getRowCount(); c++) {
                                    if (pessoaJuridica.getCodigo().equals((String) tblRegiaoEspecifica.getValueAt(c, 0))) {
                                        tblRegiaoEspecifica.setValueAt((int) tblRegiaoEspecifica.getValueAt(c, 3) + 1, c, 3);
                                        tblRegiaoEspecifica.setValueAt((double) tblRegiaoEspecifica.getValueAt(c, 4)
                                                + ListarNotaFiscal.get(x).getTotal(), c, 4);
                                        encontrou = 1;
                                    }
                                }
                                if (encontrou == 0) {
                                    Object[] row = {
                                        pessoaJuridica.getCodigo(),
                                        pessoaJuridica.getNome(),
                                        pessoaJuridica.getCidade(),
                                        1,
                                        ListarNotaFiscal.get(x).getTotal(),
                                        pessoaJuridica.getCod_vend_resp(),
                                        pessoaJuridica.getVendedor_responsavel()};

                                    modelo = (DefaultTableModel) tblRegiaoEspecifica.getModel();
                                    modelo.addRow(row);
                                    flagLimpaTabela1 = 1;
                                }
                            }
                        }
                    }
                }
            }
        }
       /* for (int a = 0; a < tblRegiaoEspecifica.getRowCount(); a++) {
            if (pedido.getClienteCod().substring(0, 2).equals("PF")) {
                pessoaFisica = daoPFisica.consultar((String) tblRegiaoEspecifica.getValueAt(a, 0));
                if (pessoaFisica.getAtivo().equals("A")) {
                    txtAtivo.setText(String.valueOf(parseInt(txtAtivo.getText() + 1)));
                } else {
                    txtInativo.setText(String.valueOf(parseInt(txtInativo.getText() + 1)));
                }
            } else {
                pessoaJuridica = daoPJrudica.consultar((String) tblRegiaoEspecifica.getValueAt(a, 0));
                if (pessoaJuridica.getAtivo().equals("A")) {
                    txtAtivo.setText(String.valueOf(parseInt(txtAtivo.getText() + 1)));
                } else {
                    txtInativo.setText(String.valueOf(parseInt(txtInativo.getText() + 1)));
                }
            }
        }*/
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Região_Especifica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Região_Especifica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Região_Especifica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Região_Especifica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiControle_Estratégico_por_Região_Especifica(login, UF, estado, qtdCli,
                        qtdPF, qtdPJ,qtdVendas,
                        valorTotal, ListarNotaFiscal, dtInicio, dtFinal,ativo,inativo).setVisible(true);
            }
        });
    }

    private int flagLimpaTabela1 = 0;
    private DefaultTableModel modelo = null;
    private Conexao conexao;
    private Vendedor vendedor = null;
    private DaoVendedor daoVendedor = null;
    private DaoPFisica daoPFisica = null;
    private DaoPJuridica daoPJrudica = null;
    private PessoaFisica pessoaFisica = null;
    private PessoaJuridica pessoaJuridica = null;
    private static Login login = null;
    private DaoGerarPedido daoGerarPedido = null;
    private Pedido pedido = null;
    private static String UF;
    private static String estado;
    private static int qtdCli;
    private static int qtdPF;
    private static int qtdPJ;
    private static int qtdVendas;
    private static double valorTotal;
    private static String dtInicio;
    private static String dtFinal;
    private static int ativo;
    private static int inativo;
    private static ArrayList<NotaFiscal> ListarNotaFiscal;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelResumo;
    private javax.swing.JPanel Painel_Controle_Estratégico;
    private javax.swing.JTabbedPane Painel_Especifico;
    private javax.swing.JPanel Painel_Mapa;
    private javax.swing.JPanel Painel_Período_Pesquisa;
    private javax.swing.JPanel Painel_RegiaoEscolhida;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField ftxtData_Final;
    private javax.swing.JFormattedTextField ftxtData_Inicial;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneVendedor1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAtivo;
    private javax.swing.JLabel lblControle_Estrategico_Regiao;
    private javax.swing.JLabel lblData_Final;
    private javax.swing.JLabel lblData_Inicial;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblInativo;
    private javax.swing.JLabel lblQtdClientes;
    private javax.swing.JLabel lblQtdPF;
    private javax.swing.JLabel lblQtdPJ;
    private javax.swing.JTable tblRegiaoEspecifica;
    private javax.swing.JTextField txtAtivo;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtInativo;
    private javax.swing.JTextField txtQtdClientePJ;
    private javax.swing.JTextField txtQtdClientes;
    private javax.swing.JTextField txtQtdClientesPF;
    // End of variables declaration//GEN-END:variables
}
