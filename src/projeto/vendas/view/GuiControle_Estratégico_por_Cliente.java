/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto.vendas.view;

import java.awt.Color;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import projeto.vendas.control.Conexao;
import projeto.vendas.control.DaoGerarPedido;
import projeto.vendas.control.DaoPFisica;
import projeto.vendas.control.DaoPJuridica;
import projeto.vendas.control.DaoProduto;
import projeto.vendas.model.Pedido;
import projeto.vendas.model.PedidoProduto;
import projeto.vendas.model.PessoaFisica;
import projeto.vendas.model.PessoaJuridica;

/**
 *
 * @author 0030481521038
 */
public class GuiControle_Estratégico_por_Cliente extends javax.swing.JFrame {

    /**
     * Creates new form GuiControle_Estratégico_por_Cliente
     */
    public GuiControle_Estratégico_por_Cliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Grupo_Cliente = new javax.swing.ButtonGroup();
        btnVoltar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        Painel_Pesquisa_Cliente4 = new javax.swing.JPanel();
        rbtnNome_Cliente = new javax.swing.JRadioButton();
        rbtnCodigo_Cliente = new javax.swing.JRadioButton();
        txt_Cliente = new javax.swing.JTextField();
        btn_pesquisar = new javax.swing.JButton();
        Painel_Cliente = new javax.swing.JScrollPane();
        tblCliente = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btn_pesquisarColetiva = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle Estratégico por Cliente");
        setBackground(new java.awt.Color(102, 153, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        Painel_Pesquisa_Cliente4.setBackground(new java.awt.Color(255, 255, 255));
        Painel_Pesquisa_Cliente4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa Individual de Cliente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        rbtnNome_Cliente.setBackground(new java.awt.Color(255, 255, 255));
        Grupo_Cliente.add(rbtnNome_Cliente);
        rbtnNome_Cliente.setText("Nome");

        rbtnCodigo_Cliente.setBackground(new java.awt.Color(255, 255, 255));
        Grupo_Cliente.add(rbtnCodigo_Cliente);
        rbtnCodigo_Cliente.setText("Código");

        txt_Cliente.setText("Luiz Fernando Neves da Rosa");

        btn_pesquisar.setText("Pesquisar");
        btn_pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_Pesquisa_Cliente4Layout = new javax.swing.GroupLayout(Painel_Pesquisa_Cliente4);
        Painel_Pesquisa_Cliente4.setLayout(Painel_Pesquisa_Cliente4Layout);
        Painel_Pesquisa_Cliente4Layout.setHorizontalGroup(
            Painel_Pesquisa_Cliente4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Pesquisa_Cliente4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_Pesquisa_Cliente4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Painel_Pesquisa_Cliente4Layout.createSequentialGroup()
                        .addComponent(rbtnNome_Cliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnCodigo_Cliente)
                        .addGap(18, 18, 18)
                        .addComponent(btn_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );
        Painel_Pesquisa_Cliente4Layout.setVerticalGroup(
            Painel_Pesquisa_Cliente4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_Pesquisa_Cliente4Layout.createSequentialGroup()
                .addComponent(txt_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Painel_Pesquisa_Cliente4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Painel_Pesquisa_Cliente4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbtnNome_Cliente)
                        .addComponent(rbtnCodigo_Cliente))
                    .addComponent(btn_pesquisar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cliente", "Frequência de Compras", "Maior Compra", "Valor Médio Gasto em Compras ", "Produto Favorito"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCliente.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        Painel_Cliente.setViewportView(tblCliente);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Painel_Pesquisa_Cliente4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Painel_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Painel_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Painel_Pesquisa_Cliente4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 103, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pesquisa Individual", null, jPanel3, "");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opções de Filtro de Pesquisa", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        btn_pesquisarColetiva.setText("Pesquisar");
        btn_pesquisarColetiva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pesquisarColetivaActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Frequencia de Compras.", "Melhores Clientes.", "Média Gasta.\t", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 214, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_pesquisarColetiva, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(btn_pesquisarColetiva))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(508, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pesquisa Coletiva", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        conexao = new Conexao();
        conexao.setDriver();
        conexao.setConnectionString();
        daoPF = new DaoPFisica(conexao.conectar());
        daoPJ = new DaoPJuridica(conexao.conectar());
        daoPedido = new DaoGerarPedido(conexao.conectar());
        daoProduto = new DaoProduto(conexao.conectar());
        model = (DefaultTableModel) tblCliente.getModel();

        ArrayList<Pedido> ListaPedidos = new ArrayList<Pedido>();
        ArrayList<PessoaFisica> ListaPF = new ArrayList<PessoaFisica>();
        ArrayList<PessoaJuridica> ListaPJ = new ArrayList<PessoaJuridica>();
        ArrayList<PedidoProduto> ListaPedidoProduto = new ArrayList<PedidoProduto>();
        ListaPF = daoPF.ListarPessoasFisicas();
        ListaPJ = daoPJ.ListarPessoasJuridicas();
        NumberFormat formatarFloat = new DecimalFormat("0.00");

        for (int i = 0; i < ListaPF.size(); i++) {
            ListaPedidoProduto = daoPedido.ProdutosMaisComprados(ListaPF.get(i).getCodigo());
            if (ListaPedidoProduto.size() > 0) {
                Object[] row = {
                    ListaPF.get(i).getNome(),
                    formatarFloat.format(daoPedido.FrequenciaDeCompras(ListaPF.get(i).getCodigo(), formatarDate.format(data), ListaPF.get(i).getDtInicio())),
                    formatarFloat.format(daoPedido.MaiorCompra(ListaPF.get(i).getCodigo())),
                    formatarFloat.format(daoPedido.MediaCompras(ListaPF.get(i).getCodigo())),
                    daoProduto.consultar(ListaPedidoProduto.get(0).getProdutoCod()).getNome()
                };
                model.addRow(row);
            } else {
                Object[] row = {
                    ListaPF.get(i).getNome(),
                    "0.00",
                    "0.00",
                    "0.00",
                    "Nenhum"
                };
                model.addRow(row);
            }
        }
        for (int i = 0; i < ListaPJ.size(); i++) {
            ListaPedidoProduto = daoPedido.ProdutosMaisComprados(ListaPJ.get(i).getCodigo());
            if (ListaPedidoProduto.size() > 0) {
                Object[] row = {
                    ListaPJ.get(i).getNome(),
                    formatarFloat.format(daoPedido.FrequenciaDeCompras(ListaPJ.get(i).getCodigo(), formatarDate.format(data), ListaPJ.get(i).getDtInicio())),
                    formatarFloat.format(daoPedido.MaiorCompra(ListaPJ.get(i).getCodigo())),
                    formatarFloat.format(daoPedido.MediaCompras(ListaPJ.get(i).getCodigo())),
                    daoProduto.consultar(ListaPedidoProduto.get(0).getProdutoCod()).getNome()
                };
                model.addRow(row);
            } else {
                Object[] row = {
                    ListaPJ.get(i).getNome(),
                    "0.00",
                    "0.00",
                    "0.00",
                    "Nenhum"
                };
                model.addRow(row);
            }
        }

    }//GEN-LAST:event_formWindowOpened

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
//        txtArea_clienteDetalhes.setText("Frequência de Compras : 2\n Média de Compras = 5.000,78");


    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btn_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pesquisarActionPerformed
        ArrayList<PedidoProduto> ListaPedidoProduto = new ArrayList<PedidoProduto>();
        ArrayList<Pedido> ListaPedidos = new ArrayList<Pedido>();

        if (rbtnCodigo_Cliente.isSelected()) {
            if (txt_Cliente.getText().substring(0, 2).contains("PJ")) {
                PJ = daoPJ.consultar(txt_Cliente.getText());
                if (PJ == null) {
                    JOptionPane.showMessageDialog(null, "Verifique o código do cliente.", "Cliente não Localizado", JOptionPane.ERROR_MESSAGE);
                } else {
                    new GuiControle_EstrategicoCliente_Individual(PJ.getCodigo()).setVisible(true);
                }
            } else {

                if (txt_Cliente.getText().substring(0, 2).contains("PF")) {
                    PF = daoPF.consultar(txt_Cliente.getText());
                    if (PF == null) {
                        JOptionPane.showMessageDialog(null, "Verifique o código do cliente.", "Cliente não Localizado", JOptionPane.ERROR_MESSAGE);

                    } else {
                        new GuiControle_EstrategicoCliente_Individual(PF.getCodigo()).setVisible(true);
                    }
                } else {
                    // Código que não é NEM PF NEM PJ
                    JOptionPane.showMessageDialog(null, "Código Inválido, por favor verifique-o.", "Código Fora dos Padrões", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            PJ = daoPJ.consultaNome(txt_Cliente.getText());
            if (PJ != null) {
                //faz os comandos para preencher a tela                    
                new GuiControle_EstrategicoCliente_Individual(PJ.getCodigo()).setVisible(true);

            } else {
                PF = daoPF.consultaNome(txt_Cliente.getText());
                if (PF != null) {
                    //Executar as aççoes
                    new GuiControle_EstrategicoCliente_Individual(PF.getCodigo()).setVisible(true);
                }
            }
            if (PF == null && PJ == null) {
                JOptionPane.showMessageDialog(null, "Verifique se o NOME do cliente está correto.", "Cliente não Localizado", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_btn_pesquisarActionPerformed

    private void btn_pesquisarColetivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pesquisarColetivaActionPerformed
        ArrayList<PessoaFisica> ListaPF = new ArrayList<PessoaFisica>();
        ArrayList<PessoaJuridica> ListaPJ = new ArrayList<PessoaJuridica>();
        ArrayList<PedidoProduto> ListaPedidoProduto = new ArrayList<PedidoProduto>();

        ListaPF = daoPF.ListarPessoasFisicas();
        ListaPJ = daoPJ.ListarPessoasJuridicas();

        for (int i = 0; i < ListaPF.size(); i++) {
            ListaPedidoProduto = daoPedido.ProdutosMaisComprados(ListaPF.get(i).getCodigo());
            if (ListaPedidoProduto.size() > 0) {
                Object[] row = {
                    ListaPF.get(i).getNome(),
                    daoPedido.MediaCompras(ListaPF.get(i).getCodigo()),
                    daoPedido.FrequenciaDeCompras(ListaPF.get(i).getCodigo(), formatarDate.format(data), ListaPF.get(i).getDtInicio()),
                    daoProduto.consultar(ListaPedidoProduto.get(ListaPedidoProduto.size() - 1).getProdutoCod()).getDescricao(),
                    daoProduto.consultar(ListaPedidoProduto.get(0).getProdutoCod()).getDescricao()
                };
                model.addRow(row);
            }
        }
    }//GEN-LAST:event_btn_pesquisarColetivaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiControle_Estratégico_por_Cliente().setVisible(true);
            }
        });
    }

    private Conexao conexao;
    private DaoPFisica daoPF;
    private DaoPJuridica daoPJ;
    private PessoaFisica PF;
    private PessoaJuridica PJ;
    private DaoGerarPedido daoPedido;
    private DaoProduto daoProduto;
    private DefaultTableModel model;
    Date data = new Date(System.currentTimeMillis());
    SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Grupo_Cliente;
    private javax.swing.JScrollPane Painel_Cliente;
    private javax.swing.JPanel Painel_Pesquisa_Cliente4;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton btn_pesquisar;
    private javax.swing.JButton btn_pesquisarColetiva;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rbtnCodigo_Cliente;
    private javax.swing.JRadioButton rbtnNome_Cliente;
    private javax.swing.JTable tblCliente;
    private javax.swing.JTextField txt_Cliente;
    // End of variables declaration//GEN-END:variables
}
