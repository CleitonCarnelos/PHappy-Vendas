/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto.vendas.view;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.thrift.server.THsHaServer;
import projeto.vendas.control.Conexao;
import projeto.vendas.control.DaoEmitirNotaFiscal;
import projeto.vendas.control.DaoGerarPedido;
import projeto.vendas.control.DaoPFisica;
import projeto.vendas.control.DaoPJuridica;
import projeto.vendas.control.DaoPedidoProduto;
import projeto.vendas.control.DaoProduto;
import projeto.vendas.control.DaoVendedor;
import projeto.vendas.model.Login;
import projeto.vendas.model.NotaFiscal;
import projeto.vendas.model.Pedido;
import projeto.vendas.model.PessoaFisica;
import projeto.vendas.model.PessoaJuridica;
import projeto.vendas.model.Vendedor;

/**
 *
 * @author 0030481521038
 */
public class GuiControle_Estratégico_por_Vendedor_Especifico extends javax.swing.JFrame {

    /**
     * Creates new form GuiControle_Estratégico_por_Vendedor
     */
    public GuiControle_Estratégico_por_Vendedor_Especifico(Login login, int codigo, ArrayList<NotaFiscal> Lista) {
        initComponents();

        this.login = login;
        this.codigo = codigo;
        this.ListarNotaFiscal = Lista;

        GuiControle_Estratégico_por_Vendedor_Especifico.this.setTitle(
                "Controle Estratégico por Vendedor    " + "Usuário:  " + login.getNome()
                + "         " + "Codigo:  " + login.getCodigo());

        DefaultTableModel modelo = (DefaultTableModel) tblClientes.getModel();

        DefaultTableModel modelo1 = (DefaultTableModel) tblVendas.getModel();

        tblClientes.setRowSorter(new TableRowSorter(modelo));
        tblVendas.setRowSorter(new TableRowSorter(modelo1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupVendedor = new javax.swing.ButtonGroup();
        Controle_Estratégico_Vendedor = new javax.swing.JPanel();
        btnFiltrarData = new javax.swing.JButton();
        jPanelVendedor = new javax.swing.JPanel();
        Painel_Vendas = new javax.swing.JTabbedPane();
        Painel_Dados = new javax.swing.JPanel();
        jPanelDados = new javax.swing.JPanel();
        txtNome = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblCodigo = new javax.swing.JLabel();
        txtFuncao = new javax.swing.JTextField();
        lblFuncao = new javax.swing.JLabel();
        lblTelefone = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        ftxtTelefone = new javax.swing.JFormattedTextField();
        ftxtCelular = new javax.swing.JFormattedTextField();
        Endereço = new javax.swing.JPanel();
        lblRua = new javax.swing.JLabel();
        txtRua = new javax.swing.JTextField();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        lblBairro = new javax.swing.JLabel();
        lblCidade = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        lblCEP = new javax.swing.JLabel();
        txtCEP = new javax.swing.JTextField();
        cbxUF = new javax.swing.JComboBox<>();
        Painel_VendasFeitas = new javax.swing.JPanel();
        jScrollPaneVendedor = new javax.swing.JScrollPane();
        tblVendas = new javax.swing.JTable();
        Painel_Clientes = new javax.swing.JPanel();
        jScrollPaneVendedor1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        btnBuscarCliente = new javax.swing.JButton();
        PainelResumo = new javax.swing.JPanel();
        txtQtdeVendas = new javax.swing.JTextField();
        lblQtdeVendas = new javax.swing.JLabel();
        txtValorTotalVendas = new javax.swing.JTextField();
        lblValorTotalVendas = new javax.swing.JLabel();
        lblClienteAtivo = new javax.swing.JLabel();
        txtClientesAtivos = new javax.swing.JTextField();
        lblClienteInativo = new javax.swing.JLabel();
        txtClientesInativos = new javax.swing.JTextField();
        txtTotalClientes = new javax.swing.JTextField();
        lblClienteInativo1 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        lblData_Inicial = new javax.swing.JLabel();
        ftxtData_Inicial = new javax.swing.JFormattedTextField();
        lblData_Final = new javax.swing.JLabel();
        ftxtData_Final = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle Estratégico Vendedor");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnFiltrarData.setText("Filtrar por data");
        btnFiltrarData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarDataActionPerformed(evt);
            }
        });

        jPanelDados.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Pessoais"));

        lblNome.setText("Nome");

        lblCodigo.setText("Codigo");

        lblFuncao.setText("Função");

        lblTelefone.setText("Telefone");

        lblEmail.setText("Email");

        lblCelular.setText("Celular");

        try {
            ftxtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtTelefone.setEnabled(false);

        try {
            ftxtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtCelular.setEnabled(false);

        javax.swing.GroupLayout jPanelDadosLayout = new javax.swing.GroupLayout(jPanelDados);
        jPanelDados.setLayout(jPanelDadosLayout);
        jPanelDadosLayout.setHorizontalGroup(
            jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDadosLayout.createSequentialGroup()
                .addGroup(jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFuncao)
                    .addComponent(txtFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 166, Short.MAX_VALUE)
                .addGroup(jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCelular)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTelefone)
                        .addComponent(lblCodigo))
                    .addComponent(ftxtTelefone)
                    .addComponent(ftxtCelular, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelDadosLayout.setVerticalGroup(
            jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosLayout.createSequentialGroup()
                .addGroup(jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelDadosLayout.createSequentialGroup()
                        .addComponent(lblCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDadosLayout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDadosLayout.createSequentialGroup()
                        .addComponent(lblFuncao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ftxtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblTelefone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDadosLayout.createSequentialGroup()
                        .addComponent(lblEmail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftxtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblCelular))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Endereço.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereço"));

        lblRua.setText("Rua");

        lblNumero.setText("Numero");

        lblBairro.setText("Bairro");

        lblCidade.setText("Cidade");

        lblEstado.setText("Estado");

        lblCEP.setText("CEP");

        cbxUF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));

        javax.swing.GroupLayout EndereçoLayout = new javax.swing.GroupLayout(Endereço);
        Endereço.setLayout(EndereçoLayout);
        EndereçoLayout.setHorizontalGroup(
            EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EndereçoLayout.createSequentialGroup()
                .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRua)
                            .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNumero)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBairro)
                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCidade)
                            .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEstado)
                            .addComponent(cbxUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCEP)
                            .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        EndereçoLayout.setVerticalGroup(
            EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EndereçoLayout.createSequentialGroup()
                .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addComponent(lblNumero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addComponent(lblRua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addComponent(lblCidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addComponent(lblBairro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EndereçoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addComponent(lblEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EndereçoLayout.createSequentialGroup()
                        .addComponent(lblCEP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Painel_DadosLayout = new javax.swing.GroupLayout(Painel_Dados);
        Painel_Dados.setLayout(Painel_DadosLayout);
        Painel_DadosLayout.setHorizontalGroup(
            Painel_DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_DadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Endereço, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(252, 252, 252))
        );
        Painel_DadosLayout.setVerticalGroup(
            Painel_DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_DadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Endereço, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Painel_Vendas.addTab("Dados", Painel_Dados);

        tblVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código Cliente", "Nome Cliente", "Nota Fiscal", "Valor da Nota", "data de Emissão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPaneVendedor.setViewportView(tblVendas);

        javax.swing.GroupLayout Painel_VendasFeitasLayout = new javax.swing.GroupLayout(Painel_VendasFeitas);
        Painel_VendasFeitas.setLayout(Painel_VendasFeitasLayout);
        Painel_VendasFeitasLayout.setHorizontalGroup(
            Painel_VendasFeitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
        );
        Painel_VendasFeitasLayout.setVerticalGroup(
            Painel_VendasFeitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
        );

        Painel_Vendas.addTab("Vendas", Painel_VendasFeitas);

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "CPF", "Ativo/Inativo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPaneVendedor1.setViewportView(tblClientes);

        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_ClientesLayout = new javax.swing.GroupLayout(Painel_Clientes);
        Painel_Clientes.setLayout(Painel_ClientesLayout);
        Painel_ClientesLayout.setHorizontalGroup(
            Painel_ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneVendedor1, javax.swing.GroupLayout.DEFAULT_SIZE, 881, Short.MAX_VALUE)
            .addGroup(Painel_ClientesLayout.createSequentialGroup()
                .addGap(358, 358, 358)
                .addComponent(btnBuscarCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Painel_ClientesLayout.setVerticalGroup(
            Painel_ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_ClientesLayout.createSequentialGroup()
                .addComponent(jScrollPaneVendedor1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarCliente)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        Painel_Vendas.addTab("Clientes", Painel_Clientes);

        lblQtdeVendas.setText("Quantidade de Vendas");

        lblValorTotalVendas.setText("Valor total das Vendas");

        lblClienteAtivo.setText("Clientes Ativos");

        lblClienteInativo.setText("Clientes Inativos");

        lblClienteInativo1.setText("Responsavel por:");

        javax.swing.GroupLayout PainelResumoLayout = new javax.swing.GroupLayout(PainelResumo);
        PainelResumo.setLayout(PainelResumoLayout);
        PainelResumoLayout.setHorizontalGroup(
            PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelResumoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelResumoLayout.createSequentialGroup()
                        .addComponent(txtClientesAtivos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtClientesInativos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTotalClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblValorTotalVendas)
                    .addComponent(txtValorTotalVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQtdeVendas)
                    .addComponent(txtQtdeVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PainelResumoLayout.createSequentialGroup()
                        .addComponent(lblClienteAtivo)
                        .addGap(18, 18, 18)
                        .addComponent(lblClienteInativo)
                        .addGap(18, 18, 18)
                        .addComponent(lblClienteInativo1)))
                .addContainerGap(600, Short.MAX_VALUE))
        );
        PainelResumoLayout.setVerticalGroup(
            PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelResumoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblValorTotalVendas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorTotalVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblQtdeVendas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtQtdeVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClienteAtivo)
                    .addComponent(lblClienteInativo)
                    .addComponent(lblClienteInativo1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelResumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtClientesAtivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClientesInativos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        Painel_Vendas.addTab("Resumo", PainelResumo);

        javax.swing.GroupLayout jPanelVendedorLayout = new javax.swing.GroupLayout(jPanelVendedor);
        jPanelVendedor.setLayout(jPanelVendedorLayout);
        jPanelVendedorLayout.setHorizontalGroup(
            jPanelVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Painel_Vendas)
        );
        jPanelVendedorLayout.setVerticalGroup(
            jPanelVendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVendedorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Painel_Vendas)
                .addContainerGap())
        );

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        lblData_Inicial.setText("Data Inicial");

        try {
            ftxtData_Inicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtData_Inicial.setText("01/01/2000");

        lblData_Final.setText("Data Final");

        try {
            ftxtData_Final.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout Controle_Estratégico_VendedorLayout = new javax.swing.GroupLayout(Controle_Estratégico_Vendedor);
        Controle_Estratégico_Vendedor.setLayout(Controle_Estratégico_VendedorLayout);
        Controle_Estratégico_VendedorLayout.setHorizontalGroup(
            Controle_Estratégico_VendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Controle_Estratégico_VendedorLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVoltar)
                .addGap(109, 109, 109)
                .addGroup(Controle_Estratégico_VendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblData_Inicial)
                    .addComponent(ftxtData_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(Controle_Estratégico_VendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblData_Final)
                    .addGroup(Controle_Estratégico_VendedorLayout.createSequentialGroup()
                        .addComponent(ftxtData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFiltrarData)))
                .addGap(399, 399, 399))
            .addComponent(jPanelVendedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Controle_Estratégico_VendedorLayout.setVerticalGroup(
            Controle_Estratégico_VendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Controle_Estratégico_VendedorLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanelVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Controle_Estratégico_VendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVoltar)
                    .addGroup(Controle_Estratégico_VendedorLayout.createSequentialGroup()
                        .addGroup(Controle_Estratégico_VendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblData_Inicial)
                            .addComponent(lblData_Final))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Controle_Estratégico_VendedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtData_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftxtData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFiltrarData))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Controle_Estratégico_Vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Controle_Estratégico_Vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conexao = new Conexao();
        conexao.setDriver();
        conexao.setConnectionString();

        daoPFisica = new DaoPFisica(conexao.conectar());
        daoPJrudica = new DaoPJuridica(conexao.conectar());
        daoVendedor = new DaoVendedor(conexao.conectar());
        daoGerarPedido = new DaoGerarPedido(conexao.conectar());

        SimpleDateFormat formatador = new SimpleDateFormat("ddMMyyyy");
        Date dataDoSistema = new Date(System.currentTimeMillis());
        String dataEmTexto = formatador.format(dataDoSistema);
        ftxtData_Final.setText(dataEmTexto);

        vendedor = daoVendedor.consultarTbVend(codigo);
        preencherTela(vendedor);

        ArrayList<PessoaFisica> clientesPF = daoPFisica.ListarPFPorCodVend(codigo);
        ArrayList<PessoaJuridica> clientesPJ = daoPJrudica.ListarPJPorCodVend(codigo);

        preencherTblClientes(clientesPF, clientesPJ);

        preencherTblVendas(ListarNotaFiscal, vendedor);

        double valorTotal = 0;
        for (int i = 0; i < tblVendas.getRowCount(); i++) {
            valorTotal = valorTotal + (double) model.getValueAt(i, 3);
        }
        txtTotalClientes.setText(String.valueOf(tblClientes.getRowCount()));
        txtQtdeVendas.setText(String.valueOf(tblVendas.getRowCount()));
        txtValorTotalVendas.setText(String.valueOf(valorTotal));

    }//GEN-LAST:event_formWindowOpened

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed

    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnFiltrarDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarDataActionPerformed
        preencherTela(vendedor);

        preencherTblVendas(ListarNotaFiscal, vendedor);

        double valorTotal = 0;
        for (int i = 0; i < tblVendas.getRowCount(); i++) {
            valorTotal = valorTotal + (double) model.getValueAt(i, 3);
        }
        txtTotalClientes.setText(String.valueOf(tblClientes.getRowCount()));
        txtQtdeVendas.setText(String.valueOf(tblVendas.getRowCount()));
        txtValorTotalVendas.setText(String.valueOf(valorTotal));
    }//GEN-LAST:event_btnFiltrarDataActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Vendedor_Especifico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Vendedor_Especifico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Vendedor_Especifico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Vendedor_Especifico.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiControle_Estratégico_por_Vendedor_Especifico(login, codigo, ListarNotaFiscal).setVisible(true);
            }
        });
    }
    private int flagLimpaTabela1 = 0;
    private int flagLimpaTabela = 0;
    private static ArrayList<NotaFiscal> ListarNotaFiscal;
    private static int codigo;
    private Conexao conexao;
    private Vendedor vendedor = null;
    private DaoVendedor daoVendedor = null;
    private DaoPFisica daoPFisica = null;
    private DaoPJuridica daoPJrudica = null;
    private PessoaFisica pessoaFisica = null;
    private PessoaJuridica pessoaJuridica = null;
    private static Login login = null;
    private DaoGerarPedido daoGerarPedido = null;
    private Pedido pedido = null;
    //private String nome;
    private DefaultTableModel model = null;
    private String legendaSituacao = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Controle_Estratégico_Vendedor;
    private javax.swing.JPanel Endereço;
    private javax.swing.JPanel PainelResumo;
    private javax.swing.JPanel Painel_Clientes;
    private javax.swing.JPanel Painel_Dados;
    private javax.swing.JTabbedPane Painel_Vendas;
    private javax.swing.JPanel Painel_VendasFeitas;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnFiltrarData;
    private javax.swing.JButton btnVoltar;
    private javax.swing.ButtonGroup buttonGroupVendedor;
    private javax.swing.JComboBox<String> cbxUF;
    private javax.swing.JFormattedTextField ftxtCelular;
    private javax.swing.JFormattedTextField ftxtData_Final;
    private javax.swing.JFormattedTextField ftxtData_Inicial;
    private javax.swing.JFormattedTextField ftxtTelefone;
    private javax.swing.JPanel jPanelDados;
    private javax.swing.JPanel jPanelVendedor;
    private javax.swing.JScrollPane jScrollPaneVendedor;
    private javax.swing.JScrollPane jScrollPaneVendedor1;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblClienteAtivo;
    private javax.swing.JLabel lblClienteInativo;
    private javax.swing.JLabel lblClienteInativo1;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblData_Final;
    private javax.swing.JLabel lblData_Inicial;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFuncao;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblQtdeVendas;
    private javax.swing.JLabel lblRua;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JLabel lblValorTotalVendas;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTable tblVendas;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCEP;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtClientesAtivos;
    private javax.swing.JTextField txtClientesInativos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFuncao;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtQtdeVendas;
    private javax.swing.JTextField txtRua;
    private javax.swing.JTextField txtTotalClientes;
    private javax.swing.JTextField txtValorTotalVendas;
    // End of variables declaration//GEN-END:variables
    public void preencherTela(Vendedor vendedor) {
        // painel dados pessoais
        txtNome.setText(vendedor.getNome());
        txtCodigo.setText(String.valueOf(vendedor.getCodigo()));
        switch (vendedor.getPermissao()) {
            case 0:
                txtFuncao.setText("Vendedor");
                break;
            case 1:
                txtFuncao.setText("Gerente de Vendas");
                break;
            case 2:
                txtFuncao.setText("Supervisor de Vendas");
                break;
        }
        ftxtTelefone.setText(vendedor.getTel());
        ftxtCelular.setText(vendedor.getCel());
        txtEmail.setText(vendedor.getEmail());

        //painel endereço
        txtRua.setText(vendedor.getRua());
        txtNumero.setText(vendedor.getNumero());
        txtBairro.setText(vendedor.getBairro());
        txtCidade.setText(vendedor.getCidade());
        cbxUF.setSelectedItem(vendedor.getUf());
        txtCEP.setText(vendedor.getCep());
    }

    public void preencherTblClientes(ArrayList<PessoaFisica> clientesPF, ArrayList<PessoaJuridica> clientesPJ) {
        if (flagLimpaTabela1 == 1) {
            model.setRowCount(0);
        }
        String ativo = "";
        String cpfcnpj = "";
        int i = 0;
        int a = 0;
        for (int x = 0; x < clientesPF.size(); x++) {
            cpfcnpj = clientesPF.get(x).getCpf().substring(0, 3) + "."
                    + clientesPF.get(x).getCpf().substring(3, 6) + "."
                    + clientesPF.get(x).getCpf().substring(6, 9) + "-"
                    + clientesPF.get(x).getCpf().substring(9, 11);
            if (clientesPF.get(x).getAtivo().equals("A")) {
                ativo = "ATIVO";
                a++;
            } else {
                ativo = "INATIVO";
                i++;
            }
            Object[] row = {
                clientesPF.get(x).getCodigo(),
                clientesPF.get(x).getNome(),
                cpfcnpj,
                ativo};

            model = (DefaultTableModel) tblClientes.getModel();
            model.addRow(row);
            flagLimpaTabela1 = 1;
        }
        for (int x = 0; x < clientesPJ.size(); x++) {
            cpfcnpj = clientesPJ.get(x).getCnpj().subSequence(0, 2) + "."
                    + clientesPJ.get(x).getCnpj().subSequence(2, 5) + "."
                    + clientesPJ.get(x).getCnpj().subSequence(5, 8) + "/"
                    + clientesPJ.get(x).getCnpj().subSequence(8, 12) + "-"
                    + clientesPJ.get(x).getCnpj().subSequence(12, 14);
            if (clientesPJ.get(x).getAtivo().equals("A")) {
                ativo = "ATIVO";
                a++;
            } else {
                ativo = "INATIVO";
                i++;
            }
            Object[] row = {
                clientesPJ.get(x).getCodigo(),
                clientesPJ.get(x).getNome(),
                cpfcnpj,
                ativo};

            model = (DefaultTableModel) tblClientes.getModel();
            model.addRow(row);
            flagLimpaTabela1 = 1;
        }
        txtClientesAtivos.setText(String.valueOf(a));
        txtClientesInativos.setText(String.valueOf(i));
    }

    public void preencherTblVendas(ArrayList<NotaFiscal> ListarNotaFiscal, Vendedor vendedor) {
        if (flagLimpaTabela == 1) {
            model.setRowCount(0);
        }
        int diaI = parseInt(ftxtData_Inicial.getText().substring(0, 2));
        int mesI = parseInt(ftxtData_Inicial.getText().substring(3, 5));
        int anoI = parseInt(ftxtData_Inicial.getText().substring(6, 10));
        LocalDate dataInicio = LocalDate.of(anoI, mesI, diaI);

        int diaF = parseInt(ftxtData_Final.getText().substring(0, 2));
        int mesF = parseInt(ftxtData_Final.getText().substring(3, 5));
        int anoF = parseInt(ftxtData_Final.getText().substring(6, 10));
        LocalDate dataFinal = LocalDate.of(anoF, mesF, diaF);

        for (int x = 0; x < ListarNotaFiscal.size(); x++) {
            int dia = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(0, 2));
            int mes = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(3, 5));
            int ano = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(6, 10));
            LocalDate dataPedido = LocalDate.of(ano, mes, dia);

            // testa se a data é maior que a data inicial da busca
            if (dataPedido.isAfter(dataInicio) || dataPedido.isEqual(dataInicio)) {
                //testa se a data é menor que a data final da busca
                if (dataPedido.isBefore(dataFinal) || dataPedido.isEqual(dataFinal)) {
                    //fazer busca para ver quem efetuou o pedido
                    pedido = daoGerarPedido.Consultar(ListarNotaFiscal.get(x).getPedidoCod());
                    if (vendedor.getCodigo() == pedido.getVendedorCod()) {
                        String nome;
                        if (pedido.getClienteCod().substring(0, 2).equals("PF")) {
                            pessoaFisica = daoPFisica.consultar(pedido.getClienteCod());
                            nome = pessoaFisica.getNome();
                        } else {
                            pessoaJuridica = daoPJrudica.consultar(pedido.getClienteCod());
                            nome = pessoaJuridica.getNome();
                        }
                        Object[] row = {
                            pedido.getClienteCod(),
                            nome,
                            ListarNotaFiscal.get(x).getNumero(),
                            (double) ListarNotaFiscal.get(x).getTotal(),
                            ListarNotaFiscal.get(x).getDataEmissao()
                        };

                        model = (DefaultTableModel) tblVendas.getModel();
                        model.addRow(row);
                        flagLimpaTabela = 1;
                    }

                }
            }
        }
    }
}
