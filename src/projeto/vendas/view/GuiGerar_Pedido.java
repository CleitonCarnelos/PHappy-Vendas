/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto.vendas.view;

import com.sun.glass.events.KeyEvent;
import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import projeto.vendas.control.Conexao;
import projeto.vendas.control.DaoGerarPedido;
import projeto.vendas.control.DaoPFisica;
import projeto.vendas.control.DaoPJuridica;
import projeto.vendas.control.DaoPedidoProduto;
import projeto.vendas.control.DaoProduto;
import projeto.vendas.control.DaoVendedor;
import projeto.vendas.model.Cliente;
import projeto.vendas.model.Login;
import projeto.vendas.model.Pedido;
import projeto.vendas.model.PedidoProduto;
import projeto.vendas.model.PessoaFisica;
import projeto.vendas.model.PessoaJuridica;
import projeto.vendas.model.Produto;
import projeto.vendas.model.validacoes.ValidaCNPJ;
import projeto.vendas.model.validacoes.ValidaCPF;

/**
 *
 * @author Cleiton
 */
public class GuiGerar_Pedido extends javax.swing.JFrame {

    /**
     * Creates new form Gerar_Pedido
     */
    public GuiGerar_Pedido(Login login) {
        initComponents();
        this.login = login;
        GuiGerar_Pedido.this.setTitle("Gerar Pedido      " + "Usu√°rio:  " + login.getNome()
                + "         " + "Codigo:  " + login.getCodigo());
        DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
        tblProduto.setRowSorter(new TableRowSorter(model));

        URL caminhoIcone = getClass().getResource("/projeto/vendas/model/icones/logotipo.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Painel_Cliente = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lbl_CPF_CNPJ = new javax.swing.JLabel();
        txtCPF_CNPJ = new javax.swing.JTextField();
        txt_nomeCliente = new javax.swing.JTextField();
        btn_consultar = new javax.swing.JButton();
        lbl_codigoCliente = new javax.swing.JLabel();
        lbl_AvisoCPF_CNPJ = new javax.swing.JLabel();
        Painel_Produto = new javax.swing.JPanel();
        lblProduto = new javax.swing.JLabel();
        lblQuantidade = new javax.swing.JLabel();
        cbxQuantidade = new javax.swing.JSpinner();
        cbxProduto = new javax.swing.JComboBox<>();
        btnAdicionar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lbl_QtdEstoque = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbl_ValorUnit = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox<>();
        lblProduto1 = new javax.swing.JLabel();
        Painel_Pedido = new javax.swing.JPanel();
        lblData = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        Produto = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        txt_Data = new javax.swing.JTextField();
        txt_total = new javax.swing.JTextField();
        btnVoltar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnEnviar_Pedido = new javax.swing.JButton();
        lblPedidos = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerar Pedido");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        Painel_Cliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12))); // NOI18N

        lblNome.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNome.setText("Nome");

        lbl_CPF_CNPJ.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_CPF_CNPJ.setText("CPF ou CNPJ");

        txtCPF_CNPJ.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCPF_CNPJ.setText("69227929045");
        txtCPF_CNPJ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCPF_CNPJFocusLost(evt);
            }
        });

        txt_nomeCliente.setEnabled(false);

        btn_consultar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btn_consultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Consultar.png"))); // NOI18N
        btn_consultar.setText("Consultar");
        btn_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarActionPerformed(evt);
            }
        });

        lbl_codigoCliente.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lbl_codigoCliente.setText("jLabel1");
        lbl_codigoCliente.setEnabled(false);
        lbl_codigoCliente.setOpaque(true);

        lbl_AvisoCPF_CNPJ.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        javax.swing.GroupLayout Painel_ClienteLayout = new javax.swing.GroupLayout(Painel_Cliente);
        Painel_Cliente.setLayout(Painel_ClienteLayout);
        Painel_ClienteLayout.setHorizontalGroup(
            Painel_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_ClienteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Painel_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Painel_ClienteLayout.createSequentialGroup()
                        .addGroup(Painel_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCPF_CNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Painel_ClienteLayout.createSequentialGroup()
                                .addComponent(lbl_CPF_CNPJ)
                                .addGap(18, 18, 18)
                                .addComponent(lbl_codigoCliente)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_consultar))
                    .addComponent(lblNome)
                    .addComponent(txt_nomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_AvisoCPF_CNPJ))
        );
        Painel_ClienteLayout.setVerticalGroup(
            Painel_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_ClienteLayout.createSequentialGroup()
                .addGroup(Painel_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_CPF_CNPJ)
                    .addComponent(lbl_codigoCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Painel_ClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCPF_CNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_nomeCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_AvisoCPF_CNPJ)
                .addContainerGap())
        );

        Painel_Produto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Produto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12))); // NOI18N

        lblProduto.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblProduto.setText("Produto");

        lblQuantidade.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblQuantidade.setText("Qtde.");

        cbxQuantidade.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbxQuantidade.setEnabled(false);

        cbxProduto.setEnabled(false);
        cbxProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxProdutoItemStateChanged(evt);
            }
        });
        cbxProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cbxProdutoFocusGained(evt);
            }
        });

        btnAdicionar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Adicionar.png"))); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.setEnabled(false);
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Qtd Dispon√≠vel ");

        lbl_QtdEstoque.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Valor Unit√°rio:");

        lbl_ValorUnit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        cbxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "5 Kg", "10 Kg", "15 Kg", "20 Kg" }));
        cbxCategoria.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxCategoriaItemStateChanged(evt);
            }
        });

        lblProduto1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblProduto1.setText("Filtro");

        javax.swing.GroupLayout Painel_ProdutoLayout = new javax.swing.GroupLayout(Painel_Produto);
        Painel_Produto.setLayout(Painel_ProdutoLayout);
        Painel_ProdutoLayout.setHorizontalGroup(
            Painel_ProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_ProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(lblProduto)
                .addGroup(Painel_ProdutoLayout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(lbl_ValorUnit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(Painel_ProdutoLayout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lbl_QtdEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(Painel_ProdutoLayout.createSequentialGroup()
                .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Painel_ProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Painel_ProdutoLayout.createSequentialGroup()
                        .addComponent(cbxQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdicionar))
                    .addComponent(lblQuantidade)))
            .addComponent(lblProduto1)
            .addComponent(cbxProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Painel_ProdutoLayout.setVerticalGroup(
            Painel_ProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_ProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_ProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Painel_ProdutoLayout.createSequentialGroup()
                        .addComponent(lblProduto1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblProduto))
                    .addGroup(Painel_ProdutoLayout.createSequentialGroup()
                        .addComponent(lblQuantidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Painel_ProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addComponent(cbxProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Painel_ProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_QtdEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Painel_ProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbl_ValorUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Painel_Pedido.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12))); // NOI18N

        lblData.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblData.setText("Data:");

        lblTotal.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblTotal.setText("Total:");

        Produto.setToolTipText("");

        tblProduto.setFont(new java.awt.Font("Perpetua Titling MT", 0, 14)); // NOI18N
        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "C√≥digo", "Nome", "Pre√ßo Unit.", "Quantidade", "Total Produto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProduto.setName(""); // NOI18N
        tblProduto.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblProduto.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                tblProdutoComponentAdded(evt);
            }
        });
        tblProduto.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tblProdutoInputMethodTextChanged(evt);
            }
        });
        tblProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblProdutoKeyPressed(evt);
            }
        });
        Produto.setViewportView(tblProduto);

        txt_Data.setEditable(false);

        txt_total.setEditable(false);

        javax.swing.GroupLayout Painel_PedidoLayout = new javax.swing.GroupLayout(Painel_Pedido);
        Painel_Pedido.setLayout(Painel_PedidoLayout);
        Painel_PedidoLayout.setHorizontalGroup(
            Painel_PedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_PedidoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_Data, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Painel_PedidoLayout.createSequentialGroup()
                .addComponent(Produto, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)
                .addContainerGap())
        );
        Painel_PedidoLayout.setVerticalGroup(
            Painel_PedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_PedidoLayout.createSequentialGroup()
                .addComponent(Produto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Painel_PedidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_Data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblData)))
        );

        btnVoltar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Voltar.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Limpar.png"))); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setEnabled(false);
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnEnviar_Pedido.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnEnviar_Pedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Pedido.png"))); // NOI18N
        btnEnviar_Pedido.setText("Enviar Pedido");
        btnEnviar_Pedido.setEnabled(false);
        btnEnviar_Pedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviar_PedidoActionPerformed(evt);
            }
        });

        lblPedidos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Tela Pedido.png"))); // NOI18N

        jLabel3.setText("N√∫mero do Pedido:");

        jLabel4.setText("0001");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar)
                        .addGap(301, 301, 301)
                        .addComponent(btnLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 484, Short.MAX_VALUE)
                        .addComponent(btnEnviar_Pedido)
                        .addGap(117, 117, 117))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(126, 126, 126))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPedidos, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Painel_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Painel_Produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Painel_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(Painel_Cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(Painel_Produto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Painel_Pedido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblPedidos)))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEnviar_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conexao = new Conexao();
        conexao.setDriver();
        conexao.setConnectionString();

        daoProduto = new DaoProduto(conexao.conectar());
        daoPFisica = new DaoPFisica(conexao.conectar());
        daoPJrudica = new DaoPJuridica(conexao.conectar());
        daoPedidoProduto = new DaoPedidoProduto(conexao.conectar());
        daoGerarPedido = new DaoGerarPedido(conexao.conectar());
        listaProdutos = daoProduto.ListarProdutosPorCategoria(cbxCategoria.getSelectedIndex());

        lbl_codigoCliente.setVisible(false);
        Date data = new Date(System.currentTimeMillis());
        SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
        txt_Data.setText(formatarDate.format(data));

        for (int i = 0; i < listaProdutos.size(); i++) {
            cbxProduto.addItem(listaProdutos.get(i).getNome() + " "
                    + listaProdutos.get(i).getDescricao());
        }
        model = (DefaultTableModel) tblProduto.getModel();
    }//GEN-LAST:event_formWindowOpened

    private void btnEnviar_PedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviar_PedidoActionPerformed
        Calendar calendar = new GregorianCalendar();
        String HoraSistema = calendar.get(Calendar.HOUR_OF_DAY) + ":" + calendar.get(Calendar.MINUTE) + ":" + calendar.get(Calendar.SECOND);

        if (JOptionPane.showConfirmDialog(null, "Deseja efetuar o Pedido ?") == 0) {//Sim

            Pedido pedido = new Pedido(daoGerarPedido.getProximoCodigo(),
                    lbl_codigoCliente.getText(), login.getCodigo(),
                    txt_Data.getText() + "-" + HoraSistema,
                    Float.parseFloat(txt_total.getText()), 3);
            pedido.setClienteNome(txt_nomeCliente.getText());
            daoGerarPedido.inserir(pedido);
            for (int i = 0; i < pedidoProduto.size(); i++) {
                pedidoProduto.get(i).setPedidoCod(pedido.getCodigo());
                daoPedidoProduto.inserir(pedidoProduto.get(i));
            }
            JOptionPane.showMessageDialog(null, "Pedido registrado com Sucesso!");
            btnAdicionar.setEnabled(false);
            cbxProduto.setEnabled(false);
            cbxQuantidade.setEnabled(false);
            btnEnviar_Pedido.setEnabled(false);
            btn_consultar.setEnabled(true);
            txtCPF_CNPJ.setEnabled(true);
            txt_total.setText("0.00");
            tblProduto.removeAll();
            txtCPF_CNPJ.requestFocus();
            txtCPF_CNPJ.setText("");
            txt_nomeCliente.setText("");

            cbxProduto.setSelectedIndex(0);
            cbxQuantidade.setValue(0);

            btnLimpar.setEnabled(false);
            int limite = tblProduto.getModel().getRowCount();
            DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
            for (int i = 0; i < limite; i++) {
                model.removeRow(0);
            }
        }

    }//GEN-LAST:event_btnEnviar_PedidoActionPerformed

    private void btn_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarActionPerformed
        txtCPF_CNPJ.requestFocus();
        if (txtCPF_CNPJ.getText().length() == 11) {
            if (ValidaCPF.validaCpf(txtCPF_CNPJ.getText()) == true) {
                pessoaFisica = daoPFisica.consultaCPF(txtCPF_CNPJ.getText());
                if (pessoaFisica == null) {
                    JOptionPane.showMessageDialog(null, "Cliente N√£o Cadastrado");
                }
                if (pessoaFisica != null) {
                    cbxQuantidade.requestFocus();
                    txt_nomeCliente.setText(pessoaFisica.getNome());
                    lbl_codigoCliente.setText(pessoaFisica.getCodigo());
                    btnAdicionar.setEnabled(true);
                    cbxProduto.setEnabled(true);
                    cbxQuantidade.setEnabled(true);
//                btnEnviar_Pedido.setEnabled(true);
                    btn_consultar.setEnabled(false);
                    txtCPF_CNPJ.setEnabled(false);
                    lbl_AvisoCPF_CNPJ.setText("Cliente Localizado");
                    btnLimpar.setEnabled(true);
                    cbxQuantidade.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "CPF Inv√°lido!");
            }
        } else if (txtCPF_CNPJ.getText().length() == 14) {
            if (ValidaCNPJ.validaCnpj(txtCPF_CNPJ.getText()) == true) {
                pessoaJuridica = daoPJrudica.consultaCNPJ(txtCPF_CNPJ.getText());
                if (pessoaJuridica == null) {
                    JOptionPane.showMessageDialog(null, "Cliente N√£o Cadastrado");
                }
                txt_nomeCliente.setText(pessoaJuridica.getNome());
                lbl_codigoCliente.setText(pessoaJuridica.getCodigo());
                btnAdicionar.setEnabled(true);
                cbxProduto.setEnabled(true);
                cbxQuantidade.setEnabled(true);
//            btnEnviar_Pedido.setEnabled(true);
                btn_consultar.setEnabled(false);
                txtCPF_CNPJ.setEnabled(false);
                lbl_AvisoCPF_CNPJ.setText("Cliente Localizado");
                btnLimpar.setEnabled(true);
                cbxQuantidade.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "CNPJ Inv√°lido!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Digite um CPF ou CNPJ v√°lido!");
        }
    }//GEN-LAST:event_btn_consultarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void txtCPF_CNPJFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPF_CNPJFocusLost
        /*if (txtCPF_CNPJ.getText().length() <= 11) {
            if (ValidaCPF.validaCpf(txtCPF_CNPJ.getText()) == false) {
                JOptionPane.showMessageDialog(null, "CPF Inv√°lido");
            }
        }
        if (txtCPF_CNPJ.getText().length() > 11) {
            if (ValidaCNPJ.validaCnpj(txtCPF_CNPJ.getText()) == false) {
                JOptionPane.showMessageDialog(null, "CNPJ Inv√°lido");
            }
        }
         */
    }//GEN-LAST:event_txtCPF_CNPJFocusLost

    private void cbxProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxProdutoItemStateChanged
        if (flag == 0) {
            lbl_QtdEstoque.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque());
            lbl_ValorUnit.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario());
        }
    }//GEN-LAST:event_cbxProdutoItemStateChanged

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        //TESTA SE O USUARIO QUER ADD PRODUTO COM QTD 0 OU NEGATIVO
        if (((int) cbxQuantidade.getValue()) <= 0) {
            JOptionPane.showMessageDialog(null, "Por Favor,"
                    + " insira uma quantidade v√°lida, maior que 0.",
                    "Erro Cr√≠tico", JOptionPane.ERROR_MESSAGE);
        } else {
            //VERIFICA SE A TABELA PRODUTO JA TEM ALGUM ITEM
            if (!(tblProduto.getRowCount() > 0)) {//ESTA VAZIA
                if ((int) cbxQuantidade.getValue()
                        <= listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque()) {//TEM EM ESTOQUE
                    Object[] row = {
                        listaProdutos.get(cbxProduto.getSelectedIndex()).getCodigo(),
                        cbxProduto.getSelectedItem().toString(),
                        listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario(),
                        cbxQuantidade.getValue(), ((Integer) cbxQuantidade.getValue())
                        * (listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario())};
                    model.addRow(row);
                } else {//NAO TEM EM ESTOQUE
                    JOptionPane.showMessageDialog(null, "Quantidade informada maior que "
                            + "a quantidade do produto em estoque.", "Erro Cr√≠tico", JOptionPane.ERROR_MESSAGE);
                }
            } //A TABELA TEM 1 ITEM AO MENOS
            else {
                //PERCORRE TODA A TABELA
                for (int i = 0; i < tblProduto.getRowCount(); i++) {
                    //CASO ENCONTRE ALGUM ITEM IGUAL AO QUE SE QUER INSERIR
                    if (listaProdutos.get(cbxProduto.getSelectedIndex()).getCodigo()
                            == (int) tblProduto.getValueAt(i, 0)) {
                        // VE SE ESSE PRODUTO QUE QUER ADD NAO VAI ECEDER A QUANTIDADE EM ESTOQUE
                        System.out.println((int) cbxQuantidade.getValue() + (int) tblProduto.getValueAt(i, 3));
                        if (((int) cbxQuantidade.getValue() + (int) tblProduto.getValueAt(i, 3))
                                <= listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque()) {//NAO ECEDEU
                            //SOMA A QUANTIDADE
                            tblProduto.setValueAt((int) model.getValueAt(i, 3)
                                    + (int) cbxQuantidade.getValue(), i, 3);
                            //SOMA O VALOR
                            tblProduto.setValueAt((int) model.getValueAt(i, 3)
                                    * listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario(), i, 4);
                            break;
                        } //ECEDEU
                        else {
                            JOptionPane.showMessageDialog(null, "Voce j√° inseriu este produto"
                                    + " e esta quantidade nova que deseja adicionar ao pedido"
                                    + " √© maior que a quantidade de produto disponivel para venda.",
                                    "Erro Cr√≠tico", JOptionPane.ERROR_MESSAGE);
                            break;
                        }
                    } //NAO ENCONTROU NENHUM PRODUTO IGUAL NA TABELA
                    else {
                        Total = 0;
                        Object[] row = {
                            listaProdutos.get(cbxProduto.getSelectedIndex()).getCodigo(),
                            cbxProduto.getSelectedItem().toString(),
                            listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario(),
                            cbxQuantidade.getValue(),
                            ((Integer) cbxQuantidade.getValue())
                            * (listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario())};
                        model.addRow(row);
                    }
                }
            }
            for (int i = 0; i < tblProduto.getRowCount(); i++) {
                //Atualiza o Display de Total 
                Total = Total + (float) model.getValueAt(i, 4);
            }
            txt_total.setText("" + Total);

            PedidoProduto itemPedido = new PedidoProduto(1, listaProdutos.get(cbxProduto.getSelectedIndex()).getCodigo(), (int) cbxQuantidade.getValue());
            pedidoProduto.add(itemPedido);
            //CHECK DE PEDIDO VAZIO PARA HABILITAR O BOT√ÉO ENVIAR PEDIDO
            if (pedidoProduto.size() > 0 && btnEnviar_Pedido.isEnabled() == false) {
                btnEnviar_Pedido.setEnabled(true);
            }
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        int limite = tblProduto.getModel().getRowCount();
        DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();
        for (int i = 0; i < limite; i++) {
            model.removeRow(0);
        }
        txtCPF_CNPJ.setText("");
        txtCPF_CNPJ.setEnabled(true);
        txtCPF_CNPJ.requestFocus();
        cbxQuantidade.setEnabled(false);
        cbxProduto.setEnabled(false);
        cbxProduto.setSelectedIndex(0);
        txt_nomeCliente.setText("");
        txt_total.setText("");
        btn_consultar.setEnabled(true);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void tblProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblProdutoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_BACKSPACE || evt.getKeyCode() == KeyEvent.VK_DELETE) {
            DefaultTableModel model = (DefaultTableModel) tblProduto.getModel();

            if (tblProduto.getSelectedRow() >= 0) {
                Total = (Total - (float) model.getValueAt(tblProduto.getSelectedRow(), 4));
                txt_total.setText("" + Total);
                // PERCORRO O ARRAYLIST QUE PREENCHE O CBX PRODUTO, AT√â ENCONTRAR O PRODUTO COM O C√ìDIGO DO EXCLUIDO.
                for (int i = 0; i < listaProdutos.size(); i++) {
                    if (listaProdutos.get(i).getCodigo() == pedidoProduto.get(tblProduto.getSelectedRow()).getProdutoCod()) {
                        //DEPOIS QUE ENCONTROU O PRODUTO, ELE VAI SETAR A NOVA QUANTIDADE.
                        //PEGANDO A QUANTIDADE ATUAL + A QUANTIDADE DO PRODUTO QUE FOI EXCLUIDO.
                        listaProdutos.get(i).setQtdEstoque(listaProdutos.get(i).getQtdEstoque() + pedidoProduto.get(tblProduto.getSelectedRow()).getProdutoQtd());
                    }

                }
                pedidoProduto.remove(tblProduto.getSelectedRow());
                model.removeRow(tblProduto.getSelectedRow());
                //Atualiza o DISPLAY
                lbl_QtdEstoque.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque());
            }
        }
        //Desativa o BOT√ÉO.
        if (pedidoProduto.size() == 0 && btnEnviar_Pedido.isEnabled() == true) {
            btnEnviar_Pedido.setEnabled(false);
        }
    }//GEN-LAST:event_tblProdutoKeyPressed

    private void tblProdutoComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_tblProdutoComponentAdded

    }//GEN-LAST:event_tblProdutoComponentAdded

    private void tblProdutoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tblProdutoInputMethodTextChanged
        System.out.println("produto adicionado");
    }//GEN-LAST:event_tblProdutoInputMethodTextChanged

    private void cbxCategoriaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxCategoriaItemStateChanged
        flag = 1;
        switch (cbxCategoria.getSelectedIndex()) {
            case 0:
                cbxProduto.removeAllItems();
                listaProdutos = null;
                listaProdutos = daoProduto.ListarProdutosPorCategoria(cbxCategoria.getSelectedIndex());
                for (int i = 0; i < listaProdutos.size(); i++) {
                    cbxProduto.addItem(listaProdutos.get(i).getNome() + " "
                            + listaProdutos.get(i).getDescricao());
                }
                lbl_QtdEstoque.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque());
                lbl_ValorUnit.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario());
                break;
            case 1:
                cbxProduto.removeAllItems();
                listaProdutos = null;
                listaProdutos = daoProduto.ListarProdutosPorCategoria(cbxCategoria.getSelectedIndex());
                for (int i = 0; i < listaProdutos.size(); i++) {
                    if (listaProdutos.get(i).getCategoria() == 1) {
                        cbxProduto.addItem(listaProdutos.get(i).getNome() + " "
                                + listaProdutos.get(i).getDescricao());
                    }
                }
                lbl_QtdEstoque.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque());
                lbl_ValorUnit.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario());
                break;
            case 2:
                cbxProduto.removeAllItems();
                listaProdutos = null;
                listaProdutos = daoProduto.ListarProdutosPorCategoria(cbxCategoria.getSelectedIndex());
                for (int i = 0; i < listaProdutos.size(); i++) {
                    if (listaProdutos.get(i).getCategoria() == 2) {
                        cbxProduto.addItem(listaProdutos.get(i).getNome() + " "
                                + listaProdutos.get(i).getDescricao());
                    }
                }
                lbl_QtdEstoque.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque());
                lbl_ValorUnit.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario());
                break;
            case 3:
                cbxProduto.removeAllItems();
                listaProdutos = null;
                listaProdutos = daoProduto.ListarProdutosPorCategoria(cbxCategoria.getSelectedIndex());
                for (int i = 0; i < listaProdutos.size(); i++) {
                    if (listaProdutos.get(i).getCategoria() == 3) {
                        cbxProduto.addItem(listaProdutos.get(i).getNome() + " "
                                + listaProdutos.get(i).getDescricao());
                    }
                }
                lbl_QtdEstoque.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque());
                lbl_ValorUnit.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario());
                break;
            case 4:
                cbxProduto.removeAllItems();
                listaProdutos = null;
                listaProdutos = daoProduto.ListarProdutosPorCategoria(cbxCategoria.getSelectedIndex());
                for (int i = 0; i < listaProdutos.size(); i++) {
                    if (listaProdutos.get(i).getCategoria() == 4) {
                        cbxProduto.addItem(listaProdutos.get(i).getNome() + " "
                                + listaProdutos.get(i).getDescricao());
                    }
                }
                lbl_QtdEstoque.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getQtdEstoque());
                lbl_ValorUnit.setText("" + listaProdutos.get(cbxProduto.getSelectedIndex()).getValorUnitario());
                break;
        }
        flag = 0;
    }//GEN-LAST:event_cbxCategoriaItemStateChanged

    private void cbxProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbxProdutoFocusGained

    }//GEN-LAST:event_cbxProdutoFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiGerar_Pedido.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiGerar_Pedido.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiGerar_Pedido.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiGerar_Pedido.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiGerar_Pedido(login).setVisible(true);
            }
        });
    }
    private DefaultTableModel model = null;
    private float Total = 0;
    private int flag = 0;
    private ArrayList<Produto> listaProdutos = null;
    private ArrayList<PedidoProduto> pedidoProduto = new ArrayList();
    private ArrayList<PessoaFisica> ListaPessoaFisica = null;
    private ArrayList<PessoaJuridica> ListaPessoaJuridica = null;
    private ArrayList<Pedido> ListaPedido = new ArrayList();
    private Conexao conexao;
    private DaoProduto daoProduto = null;
    private DaoPFisica daoPFisica = null;
    private DaoGerarPedido daoGerarPedido = null;
    private DaoPJuridica daoPJrudica = null;
    private DaoPedidoProduto daoPedidoProduto = null;
    private PessoaFisica pessoaFisica = null;
    private PessoaJuridica pessoaJuridica = null;
    private static Login login = null;

    private Produto produto;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Painel_Cliente;
    private javax.swing.JPanel Painel_Pedido;
    private javax.swing.JPanel Painel_Produto;
    private javax.swing.JScrollPane Produto;
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEnviar_Pedido;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton btn_consultar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxCategoria;
    private javax.swing.JComboBox<String> cbxProduto;
    private javax.swing.JSpinner cbxQuantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPedidos;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JLabel lblProduto1;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lbl_AvisoCPF_CNPJ;
    private javax.swing.JLabel lbl_CPF_CNPJ;
    private javax.swing.JLabel lbl_QtdEstoque;
    private javax.swing.JLabel lbl_ValorUnit;
    private javax.swing.JLabel lbl_codigoCliente;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTextField txtCPF_CNPJ;
    private javax.swing.JTextField txt_Data;
    private javax.swing.JTextField txt_nomeCliente;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables

}
