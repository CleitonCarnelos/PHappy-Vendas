/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projeto.vendas.view;

import java.awt.Image;
import java.awt.Toolkit;
import static java.lang.Integer.parseInt;
import java.net.URL;
import java.sql.Date;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import projeto.vendas.control.Conexao;
import projeto.vendas.control.DaoEmitirNotaFiscal;
import projeto.vendas.control.DaoGerarPedido;
import projeto.vendas.control.DaoNotaFiscalItens;
import projeto.vendas.control.DaoPFisica;
import projeto.vendas.control.DaoPJuridica;
import projeto.vendas.control.DaoVendedor;
import projeto.vendas.model.Login;
import projeto.vendas.model.NotaFiscal;
import projeto.vendas.model.Pedido;
import projeto.vendas.model.PessoaFisica;
import projeto.vendas.model.PessoaJuridica;
import projeto.vendas.model.Vendedor;
import projeto.vendas.tabelas.GuiControleEstrategicoVendedorTBVendedoresGeral;

/**
 *
 * @author 0030481521038
 */
public class GuiControle_Estratégico_por_Vendedor extends javax.swing.JFrame {

    /**
     * 1
     * Creates new form GuiControle_Estratégico_por_Vendedor
     */
    public GuiControle_Estratégico_por_Vendedor(Login login) {
        initComponents();
        this.login = login;
        GuiControle_Estratégico_por_Vendedor.this.setTitle("Controle Estratégico por Vendedor    " + "Usuário:  " + login.getNome()
                + "         " + "Codigo:  " + login.getCodigo());
        DefaultTableModel modelo = (DefaultTableModel) tblVendedor.getModel();
        tblVendedor.setRowSorter(new TableRowSorter(modelo));
        
        URL caminhoIcone = getClass().getResource("/projeto/vendas/model/icones/logotipo.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBuscar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        lblData_Inicial = new javax.swing.JLabel();
        lblData_Final = new javax.swing.JLabel();
        Painel_Geral = new javax.swing.JTabbedPane();
        Painel_Vendedores = new javax.swing.JPanel();
        jScrollPaneVendedor = new javax.swing.JScrollPane();
        tblVendedor = new javax.swing.JTable();
        btnClienteEspecifico = new javax.swing.JButton();
        Painel_ResumoGeral = new javax.swing.JPanel();
        jPanelVendedores = new javax.swing.JPanel();
        lblQtdeColaboradores = new javax.swing.JLabel();
        lblAtivos = new javax.swing.JLabel();
        txtVendAtivos = new javax.swing.JTextField();
        txtVendInativos = new javax.swing.JTextField();
        lblInativos = new javax.swing.JLabel();
        lblQtdeVendedores = new javax.swing.JLabel();
        lblQtdeSupervisor = new javax.swing.JLabel();
        lblQtdeGerentes = new javax.swing.JLabel();
        txtVendedores = new javax.swing.JTextField();
        txtSupervisores = new javax.swing.JTextField();
        txtGerentes = new javax.swing.JTextField();
        lblTotalColaboradores = new javax.swing.JLabel();
        txtTotalColaboradores = new javax.swing.JTextField();
        jPanelVendas = new javax.swing.JPanel();
        lblTotalValorVendas = new javax.swing.JLabel();
        lblQtdeTotalVendas = new javax.swing.JLabel();
        txtQtdeTotalVendas = new javax.swing.JTextField();
        txtValorTotalVendas = new javax.swing.JTextField();
        btnImprimir = new javax.swing.JButton();
        ftxtData_Inicial = new javax.swing.JFormattedTextField();
        ftxtData_Final = new javax.swing.JFormattedTextField();
        lblA = new javax.swing.JLabel();
        lblDe = new javax.swing.JLabel();
        lblControle_Estrategico_Vendedor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle Estratégico Vendedor");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Consultar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnVoltar.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Voltar.png"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        lblData_Inicial.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblData_Inicial.setText("Data Inicial");

        lblData_Final.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblData_Final.setText("Data Final");

        Painel_Geral.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N

        tblVendedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Cargo", "Data do cadastro", "Vendas no periodo", "Valor total das vendas", "Qtde Clientes", "Ativo/Inativo", "Data da Inatividade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblVendedor.setToolTipText("");
        jScrollPaneVendedor.setViewportView(tblVendedor);

        btnClienteEspecifico.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnClienteEspecifico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Selecionar.png"))); // NOI18N
        btnClienteEspecifico.setText("Selecionar Cliente Específico");
        btnClienteEspecifico.setEnabled(false);
        btnClienteEspecifico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteEspecificoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Painel_VendedoresLayout = new javax.swing.GroupLayout(Painel_Vendedores);
        Painel_Vendedores.setLayout(Painel_VendedoresLayout);
        Painel_VendedoresLayout.setHorizontalGroup(
            Painel_VendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneVendedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
            .addComponent(btnClienteEspecifico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Painel_VendedoresLayout.setVerticalGroup(
            Painel_VendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_VendedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneVendedor, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClienteEspecifico, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Painel_Geral.addTab("Vendedores", Painel_Vendedores);

        jPanelVendedores.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vendedores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12))); // NOI18N

        lblQtdeColaboradores.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblQtdeColaboradores.setText("Quantidade de colaboradores por função ativos");

        lblAtivos.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblAtivos.setText("Vendedores Ativos");

        txtVendAtivos.setEnabled(false);

        txtVendInativos.setEnabled(false);
        txtVendInativos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVendInativosActionPerformed(evt);
            }
        });

        lblInativos.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblInativos.setText("Vendedores Inatiivos");

        lblQtdeVendedores.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblQtdeVendedores.setText("Vendedores");

        lblQtdeSupervisor.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblQtdeSupervisor.setText("Supervisores");

        lblQtdeGerentes.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblQtdeGerentes.setText("Gerentes");

        txtVendedores.setEnabled(false);

        txtSupervisores.setEnabled(false);

        txtGerentes.setEnabled(false);
        txtGerentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGerentesActionPerformed(evt);
            }
        });

        lblTotalColaboradores.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblTotalColaboradores.setText("Total de Colaboradores");

        txtTotalColaboradores.setEnabled(false);

        javax.swing.GroupLayout jPanelVendedoresLayout = new javax.swing.GroupLayout(jPanelVendedores);
        jPanelVendedores.setLayout(jPanelVendedoresLayout);
        jPanelVendedoresLayout.setHorizontalGroup(
            jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVendedoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQtdeColaboradores)
                    .addGroup(jPanelVendedoresLayout.createSequentialGroup()
                        .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelVendedoresLayout.createSequentialGroup()
                                .addComponent(txtVendedores, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(txtSupervisores, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelVendedoresLayout.createSequentialGroup()
                                .addComponent(lblQtdeVendedores)
                                .addGap(84, 84, 84)
                                .addComponent(lblQtdeSupervisor)))
                        .addGap(38, 38, 38)
                        .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblQtdeGerentes)
                            .addComponent(txtGerentes, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAtivos)
                    .addComponent(txtVendAtivos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInativos)
                    .addComponent(txtVendInativos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotalColaboradores)
                    .addComponent(txtTotalColaboradores, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanelVendedoresLayout.setVerticalGroup(
            jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVendedoresLayout.createSequentialGroup()
                .addComponent(lblQtdeColaboradores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQtdeVendedores)
                    .addComponent(lblQtdeSupervisor)
                    .addComponent(lblQtdeGerentes)
                    .addComponent(lblAtivos)
                    .addComponent(lblInativos)
                    .addComponent(lblTotalColaboradores))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtVendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelVendedoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSupervisores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtGerentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtVendAtivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtVendInativos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTotalColaboradores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanelVendas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Vendas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 12))); // NOI18N

        lblTotalValorVendas.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblTotalValorVendas.setText("Valor total das vendas");

        lblQtdeTotalVendas.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblQtdeTotalVendas.setText("Quantidade total de vendas");

        txtQtdeTotalVendas.setEnabled(false);

        txtValorTotalVendas.setEnabled(false);

        javax.swing.GroupLayout jPanelVendasLayout = new javax.swing.GroupLayout(jPanelVendas);
        jPanelVendas.setLayout(jPanelVendasLayout);
        jPanelVendasLayout.setHorizontalGroup(
            jPanelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVendasLayout.createSequentialGroup()
                .addGroup(jPanelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQtdeTotalVendas)
                    .addComponent(txtQtdeTotalVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelVendasLayout.createSequentialGroup()
                        .addComponent(txtValorTotalVendas, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblTotalValorVendas, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)))
        );
        jPanelVendasLayout.setVerticalGroup(
            jPanelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelVendasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalValorVendas)
                    .addComponent(lblQtdeTotalVendas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelVendasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQtdeTotalVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValorTotalVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Painel_ResumoGeralLayout = new javax.swing.GroupLayout(Painel_ResumoGeral);
        Painel_ResumoGeral.setLayout(Painel_ResumoGeralLayout);
        Painel_ResumoGeralLayout.setHorizontalGroup(
            Painel_ResumoGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_ResumoGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Painel_ResumoGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Painel_ResumoGeralLayout.createSequentialGroup()
                        .addComponent(jPanelVendedores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(75, 75, 75))
                    .addGroup(Painel_ResumoGeralLayout.createSequentialGroup()
                        .addComponent(jPanelVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        Painel_ResumoGeralLayout.setVerticalGroup(
            Painel_ResumoGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Painel_ResumoGeralLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelVendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );

        Painel_Geral.addTab("Resumo Geral de Todos os Vendedores", Painel_ResumoGeral);

        btnImprimir.setFont(new java.awt.Font("Times New Roman", 3, 12)); // NOI18N
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Imprimir.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setEnabled(false);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        try {
            ftxtData_Inicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtData_Inicial.setText("01012000");
        ftxtData_Inicial.setToolTipText("");

        try {
            ftxtData_Final.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtData_Final.setText("");

        lblA.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblA.setText("á");

        lblDe.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblDe.setText("De:");

        lblControle_Estrategico_Vendedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projeto/vendas/model/icones/Controle Estrategico por vendedor.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDe)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblData_Inicial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ftxtData_Inicial, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addComponent(lblA, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblData_Final)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ftxtData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar)))
                .addGap(105, 105, 105)
                .addComponent(btnImprimir)
                .addGap(224, 224, 224))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblControle_Estrategico_Vendedor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Painel_Geral)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblControle_Estrategico_Vendedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Painel_Geral, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblData_Inicial)
                    .addComponent(lblData_Final))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltar)
                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtData_Inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtData_Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblA)
                    .addComponent(lblDe))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtVendInativosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVendInativosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVendInativosActionPerformed

    private void txtGerentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGerentesActionPerformed

    }//GEN-LAST:event_txtGerentesActionPerformed

    private void btnClienteEspecificoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteEspecificoActionPerformed
        if (tblVendedor.getSelectedRow() >= 0) {
            GuiControle_Estratégico_por_Vendedor_Especifico GUI
                    = new GuiControle_Estratégico_por_Vendedor_Especifico(login,
                            ((int) tblVendedor.getValueAt(tblVendedor.getSelectedRow(), 0)), ListarNotaFiscal);
            GUI.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "Escolha um vendedor!");
        }
    }//GEN-LAST:event_btnClienteEspecificoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conexao = new Conexao();
        conexao.setDriver();
        conexao.setConnectionString();

        daoPFisica = new DaoPFisica(conexao.conectar());
        daoPJrudica = new DaoPJuridica(conexao.conectar());
        daoVendedor = new DaoVendedor(conexao.conectar());

        SimpleDateFormat formatador = new SimpleDateFormat("ddMMyyyy");
        Date dataDoSistema = new Date(System.currentTimeMillis());
        String dataEmTexto = formatador.format(dataDoSistema);
        ftxtData_Final.setText(dataEmTexto);
    }//GEN-LAST:event_formWindowOpened

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        //limpa caso ja tiver algo na tabela
        if (flagLimpaTabela == 1) {
            model.setRowCount(0);
        }
        daoVendedor = new DaoVendedor(conexao.conectar());
        daoPFisica = new DaoPFisica(conexao.conectar());
        daoPJrudica = new DaoPJuridica(conexao.conectar());
        daoGerarPedido = new DaoGerarPedido(conexao.conectar());
        daoEmitirNotaFical = new DaoEmitirNotaFiscal(conexao.conectar());

        ListarVendedores = daoVendedor.listarVendedoresTotal();
        preencheTabelaComVendedor(ListarVendedores);

        ListarNotaFiscal = daoEmitirNotaFical.ListarNotasFiscais();
        preencheTabelaComNotaFiscal(ListarNotaFiscal);

        contaClientes();
        int total = 0;
        double valorTotal = 0;
        for (int i = 0; i < tblVendedor.getRowCount(); i++) {
            total = total + (int) model.getValueAt(i, 4);;
            
            valorTotal = valorTotal + (double)model.getValueAt(i,5);
        }

        txtQtdeTotalVendas.setText(String.valueOf(total));

        NumberFormat calculo;
        calculo = NumberFormat.getInstance();
        calculo.setMinimumFractionDigits(2);
        txtValorTotalVendas.setText("R$ " + calculo.format(valorTotal) + " Reais");

        btnClienteEspecifico.setEnabled(true);

        if (tblVendedor.getRowCount() >= 0) {
            btnImprimir.setEnabled(true);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        List lista = new ArrayList();
        for (int x = 0; x < tblVendedor.getRowCount(); x++) {
            GuiControleEstrategicoVendedorTBVendedoresGeral print
                    = new GuiControleEstrategicoVendedorTBVendedoresGeral();

            print.setCodigo((int) tblVendedor.getValueAt(x, 0));
            print.setNome((String) tblVendedor.getValueAt(x, 1));
            print.setCargo((String) tblVendedor.getValueAt(x, 2));
            print.setDtCadastro((String) tblVendedor.getValueAt(x, 3));
            print.setQtdeVendasPeriodo((int) tblVendedor.getValueAt(x, 4));
            print.setValorVendasPeriodo((double) tblVendedor.getValueAt(x, 5));
            System.out.println(print.getValorVendasPeriodo());
            print.setQtdeClientes((int) tblVendedor.getValueAt(x, 6));
            print.setAtivo((String) tblVendedor.getValueAt(x, 7));
            print.setDtInatividade((String) tblVendedor.getValueAt(x, 8));

            lista.add(print);
        }

        // Map<String, Object> parameters = new HashMap<String, Object>();
        Map parameters = new HashMap();
        parameters.put("qtdcolaboradores", txtTotalColaboradores.getText());
        parameters.put("vendedores", txtVendedores.getText());
        parameters.put("supervisores", txtSupervisores.getText());
        parameters.put("gerentes", txtGerentes.getText());
        parameters.put("qtdtotalvendasgeral", txtQtdeTotalVendas.getText());
        parameters.put("valortotalvendasgeral", txtValorTotalVendas.getText());
        parameters.put("a", txtVendAtivos.getText());
        parameters.put("i", txtVendInativos.getText());
        parameters.put("dtinicio", ftxtData_Inicial.getText());
        parameters.put("dtfinal", ftxtData_Final.getText());

        JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(lista);
        try {

            JasperPrint jpPrint;
            jpPrint = JasperFillManager.fillReport("relatorios/EstrategiaPorVendedor.jasper",
                    parameters, ds);

            JasperViewer jv = new JasperViewer(jpPrint, false);
            jv.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(GuiControle_Estratégico_por_Vendedor_Especifico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Vendedor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Vendedor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Vendedor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiControle_Estratégico_por_Vendedor.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiControle_Estratégico_por_Vendedor(login).setVisible(true);
            }
        });
    }

    private static DecimalFormat formatoDinheiro = new DecimalFormat("#.##");
    private ArrayList<Vendedor> ListarVendedores;
    private ArrayList<NotaFiscal> ListarNotaFiscal;
    private static Login login = null;
    private static int codigo;
    private Conexao conexao;
    private Vendedor vendedor = null;
    private NotaFiscal notaFiscal = null;
    private DaoVendedor daoVendedor = null;
    private DaoPFisica daoPFisica = null;
    private DaoPJuridica daoPJrudica = null;
    private DaoEmitirNotaFiscal daoEmitirNotaFical = null;
    private DaoNotaFiscalItens daoNotaFicalItens = null;
    private PessoaFisica pessoaFisica = null;
    private PessoaJuridica pessoaJuridica = null;
    //private static Login login = null;
    private DaoGerarPedido daoGerarPedido = null;
    private Pedido pedido = null;
    //private String nome;
    private DefaultTableModel model = null;
    private String legendaSituacao = null;
    private int flagLimpaTabela = 0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane Painel_Geral;
    private javax.swing.JPanel Painel_ResumoGeral;
    private javax.swing.JPanel Painel_Vendedores;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnClienteEspecifico;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField ftxtData_Final;
    private javax.swing.JFormattedTextField ftxtData_Inicial;
    private javax.swing.JPanel jPanelVendas;
    private javax.swing.JPanel jPanelVendedores;
    private javax.swing.JScrollPane jScrollPaneVendedor;
    private javax.swing.JLabel lblA;
    private javax.swing.JLabel lblAtivos;
    private javax.swing.JLabel lblControle_Estrategico_Vendedor;
    private javax.swing.JLabel lblData_Final;
    private javax.swing.JLabel lblData_Inicial;
    private javax.swing.JLabel lblDe;
    private javax.swing.JLabel lblInativos;
    private javax.swing.JLabel lblQtdeColaboradores;
    private javax.swing.JLabel lblQtdeGerentes;
    private javax.swing.JLabel lblQtdeSupervisor;
    private javax.swing.JLabel lblQtdeTotalVendas;
    private javax.swing.JLabel lblQtdeVendedores;
    private javax.swing.JLabel lblTotalColaboradores;
    private javax.swing.JLabel lblTotalValorVendas;
    private javax.swing.JTable tblVendedor;
    private javax.swing.JTextField txtGerentes;
    private javax.swing.JTextField txtQtdeTotalVendas;
    private javax.swing.JTextField txtSupervisores;
    private javax.swing.JTextField txtTotalColaboradores;
    private javax.swing.JTextField txtValorTotalVendas;
    private javax.swing.JTextField txtVendAtivos;
    private javax.swing.JTextField txtVendInativos;
    private javax.swing.JTextField txtVendedores;
    // End of variables declaration//GEN-END:variables
    public void preencheTabelaComVendedor(ArrayList<Vendedor> ListarVendedores) {
        String funcao = "";
        String ativo = "";
        String dtInatividade;
        int a = 0;
        int i = 0;
        int vend = 0;
        int sup = 0;
        int ger = 0;

        int diaI = parseInt(ftxtData_Inicial.getText().substring(0, 2));
        int mesI = parseInt(ftxtData_Inicial.getText().substring(3, 5));
        int anoI = parseInt(ftxtData_Inicial.getText().substring(6, 10));
        LocalDate dataInicio = LocalDate.of(anoI, mesI, diaI);

        int diaF = parseInt(ftxtData_Final.getText().substring(0, 2));
        int mesF = parseInt(ftxtData_Final.getText().substring(3, 5));
        int anoF = parseInt(ftxtData_Final.getText().substring(6, 10));
        LocalDate dataFinal = LocalDate.of(anoF, mesF, diaF);

        for (int x = 0; x < ListarVendedores.size(); x++) {
            int dia = parseInt(ListarVendedores.get(x).getDtInicio().substring(0, 2));
            int mes = parseInt(ListarVendedores.get(x).getDtInicio().substring(2, 4));
            int ano = parseInt(ListarVendedores.get(x).getDtInicio().substring(4, 8));
            LocalDate datainicio1 = LocalDate.of(ano, mes, dia);

            // testa se a data é maior que a data inicial da busca
            if (datainicio1.isAfter(dataInicio) || datainicio1.isEqual(dataInicio)) {
                //testa se a data é menor que a data final da busca
                if (datainicio1.isBefore(dataFinal) || datainicio1.isEqual(dataFinal)) {
                    dtInatividade = "-";
                    if (ListarVendedores.get(x).getPermissao() == 0) {
                        funcao = "Vendedor";
                        vend++;
                    } else if (ListarVendedores.get(x).getPermissao() == 1) {
                        funcao = "Gerente de Vendas";
                        ger++;
                    } else {
                        funcao = "Supervisor de Vendas";
                        sup++;
                    }

                    if (ListarVendedores.get(x).getAtivo().equals("A")) {
                        ativo = "ATIVO";
                        a++;
                    } else {
                        ativo = "INATIVO";
                        i++;
                    }

                    if (!(ListarVendedores.get(x).getDtInatividade() == null)) {
                        dtInatividade = ListarVendedores.get(x).getDtInatividade().substring(0, 2) + "/"
                                + ListarVendedores.get(x).getDtInatividade().substring(2, 4) + "/"
                                + ListarVendedores.get(x).getDtInatividade().substring(4, 8);
                    }
                    String dtInicio = ListarVendedores.get(x).getDtInicio().substring(0, 2) + "/"
                            + ListarVendedores.get(x).getDtInicio().substring(2, 4) + "/"
                            + ListarVendedores.get(x).getDtInicio().substring(4, 8);

                    Object[] row = {
                        ListarVendedores.get(x).getCodigo(),
                        ListarVendedores.get(x).getNome(),
                        funcao,
                        dtInicio,
                        0,
                        0.0,
                        0,
                        ativo,
                        dtInatividade
                    };

                    model = (DefaultTableModel) tblVendedor.getModel();
                    model.addRow(row);
                    flagLimpaTabela = 1;
                }
            }
        }

        txtTotalColaboradores.setText(String.valueOf(tblVendedor.getRowCount()));
        txtVendAtivos.setText(String.valueOf(a));
        txtVendInativos.setText(String.valueOf(i));
        txtVendedores.setText(String.valueOf(vend));
        txtGerentes.setText(String.valueOf(ger));
        txtSupervisores.setText(String.valueOf(sup));
    }

    public void preencheTabelaComNotaFiscal(ArrayList<NotaFiscal> ListarNotaFiscais) {
        int totalVendas = 0;
        double valorTotalVendas = 0;

        int diaI = parseInt(ftxtData_Inicial.getText().substring(0, 2));
        int mesI = parseInt(ftxtData_Inicial.getText().substring(3, 5));
        int anoI = parseInt(ftxtData_Inicial.getText().substring(6, 10));
        LocalDate dataInicio = LocalDate.of(anoI, mesI, diaI);

        int diaF = parseInt(ftxtData_Final.getText().substring(0, 2));
        int mesF = parseInt(ftxtData_Final.getText().substring(3, 5));
        int anoF = parseInt(ftxtData_Final.getText().substring(6, 10));
        LocalDate dataFinal = LocalDate.of(anoF, mesF, diaF);

        for (int x = 0; x < ListarNotaFiscal.size(); x++) {

            int dia = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(0, 2));
            int mes = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(3, 5));
            int ano = parseInt(ListarNotaFiscal.get(x).getDataEmissao().substring(6, 10));
            LocalDate dataPedido = LocalDate.of(ano, mes, dia);

            // testa se a data é maior que a data inicial da busca
            if (dataPedido.isAfter(dataInicio) || dataPedido.isEqual(dataInicio)) {
                //testa se a data é menor que a data final da busca
                if (dataPedido.isBefore(dataFinal) || dataPedido.isEqual(dataFinal)) {
                    //fazer busca para ver quem efetuou o pedido
                    pedido = daoGerarPedido.Consultar(ListarNotaFiscal.get(x).getPedidoCod());
                    for (int c = 0; c < tblVendedor.getModel().getRowCount(); c++) {
                        if ((int) tblVendedor.getValueAt(c, 0) == pedido.getVendedorCod()) {

                            totalVendas = (int) tblVendedor.getValueAt(c, 4);
                            totalVendas++;
                            tblVendedor.getModel().setValueAt(totalVendas, c, 4);
                            valorTotalVendas = (double)model.getValueAt(c, 5);
                            System.out.println((double) ListarNotaFiscal.get(x).getTotal());
                            valorTotalVendas = valorTotalVendas + (double) ListarNotaFiscal.get(x).getTotal();
                                                       System.out.println(valorTotalVendas);
                          

                            tblVendedor.getModel().setValueAt(valorTotalVendas, c, 5);
                        }
                    }

                }
            }
        }
    }

    public void contaClientes() {
        for (int x = 0; x < tblVendedor.getModel().getRowCount(); x++) {
            int qtdeClientes = 0;
            qtdeClientes = daoVendedor.contaClientePFPJ((int) tblVendedor.getValueAt(x, 0));
            tblVendedor.getModel().setValueAt(qtdeClientes, x, 6);
        }
    }
}
